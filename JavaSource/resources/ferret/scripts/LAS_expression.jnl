! LAS_expression.jnl
!
! Called in LAS_initialize_data.jnl, after the dataset data_var and region
! have been defined.
!
! If there is an Expression defined, parse it and redefine the symbol
! ferret_plot_var to include the operations.

LET ev = STRINDEX("($ferret_expression)", "$")

IF `ev EQ 0` THEN
   DEFINE SYMBOL error_status = ERROR
   DEFINE SYMBOL error_type = EXPRESSION
   DEFINE SYMBOL error_string = The expression ($ferret_expression) must contain at least one $.
   EXIT/SCRIPT
ENDIF

LET en = STRLEN("($ferret_expression)")
LET e1 = ev - 1
LET e2 = ev + 1
IF `e1 GT 0` THEN DEFINE SYMBOL expr1 = `SUBSTRING("($ferret_expression)", 1, e1)`
IF `e2 LT en` THEN DEFINE SYMBOL expr2 = `SUBSTRING("($ferret_expression)", e2, en)`

! A slash may not end an expression; it may be escaped with \.
! Put in two \\ since one is escaped on this DEFINE SYMBOL expr1
! and the other on DEFINE SYMBOL ferret_plot_var

LET eslash = 0
LET eslash = STRINDEX("($ferret_expression)", "/")
list eslash, ev

IF `(eslash GT 0) + (eslash LT ev) EQ 2` THEN
   ! If slash ends def of expr1 then slash is missing and needs to be restored.
   IF `STRINDEX("($expr1)", "/") EQ 0` THEN
      DEFINE SYMBOL expr1 `SUBSTRING("($ferret_expression)", 1, eslash-1)`
      DEFINE SYMBOL expr1 `STRCAT("($expr1)", "\\/")`
   ENDIF
ENDIF

! Define the plot variable and title

DEFINE SYMBOL ferret_plot_var ($expr1)($data_var)[d=($data_num),($region_full)]($expr2)
DEFINE SYMBOL ferret_plot_var_noregion ($expr1)($data_var)[d=($data_num)]($expr2)
DEFINE SYMBOL ferret_plot_title ($expr1) ($data_title) ($expr2)
DEFINE SYMBOL variable_lab ($expr1) ($variable_lab) ($expr2)

DEFINE SYMBOL ferret_xyz_var = ($expr1)($data_var)[d=($data_num),($region_xyz)]($expr2)
DEFINE SYMBOL ferret_t_var = ($expr1)($data_var)[d=($data_num),($region_t)]($expr2)


! This works except if the expression has spaces around the $ characters.
! Otherwise Ferret seems to be looking for script arguments.

LET esecond = STRINDEX("($expr2)", "$") 
IF `esecond GT 0` THEN

   LET ev = STRINDEX("($expr2)", "$")
   LET en = STRLEN("($expr2)")
   LET e1 = ev - 1
   LET e2 = ev + 1
   IF `e1 GT 0` THEN DEFINE SYMBOL expr3 = `SUBSTRING("($expr2)", 1, e1)`
   IF `e2 LT en` THEN DEFINE SYMBOL expr4 = `SUBSTRING("($expr2)", e2, en)`

   DEFINE SYMBOL ferret_plot_var ($expr1)($data_var)[d=($data_num),($region_full)]($expr3)($data_var)[d=($data_num),($region_full)]($expr4)
   DEFINE SYMBOL ferret_plot_var_noregion ($expr1)($data_var)[d=($data_num),($region_full)]($expr3)($data_var)[d=($data_num)]($expr4)

   DEFINE SYMBOL ferret_xyz_var = ($expr1)($data_var)[d=($data_num),($region_xyz)]($expr3)[d=($data_num),($region_xyz)]($expr4)
   DEFINE SYMBOL ferret_t_var = ($expr1)($data_var)[d=($data_num),($region_t)]($expr3)[d=($data_num),($region_t)]($expr4)

   DEFINE SYMBOL ferret_plot_title ($expr1) ($data_title) ($expr3) ($data_title) ($expr4)
ENDIF

! Define with curvilinear coordiate variables if applicable.
IF ($native_curvilinear_xy"0|1|*>1") THEN \
   DEFINE SYMBOL ferret_plot_var ($ferret_plot_var), xcoord, ycoord

! Define upper-right labels with the url; the URL is not plotted automatically when the var is
! (the same thing may be done in transform scripts or in differencing setup; that is ok

!GO LAS_url_label ($num)

! End of $RCSfile ------------LAS_expression.jnl--------------------------
