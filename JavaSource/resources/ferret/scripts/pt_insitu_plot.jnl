!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  pt_insitu_poly.jnl
! 
! $Author: ansley 
! $Date: 7/17/2007
! 3/14/18 changes to use PyFerret pen colors for labels
!
! py_insitu_poly.jnl creates an property-time polygon plot for 
! insitu data, for use with the Back End Server code that sits behind a 
! Live Access Server (LAS). 
!
! Plots data locations property, tpts, with an optional variable at those
! locations whose values color the points.

! Define symbols associated with the region and data and perform any
! initialization needed for this dataset.

DEFINE SYMBOL data_initialization_script = LAS_initialize_data_pt_insitu

GO LAS_initialize_region 0
GO LAS_initialize_data 0

! Check for errors (They often occur during dataset initialization.)

IF ($error_status"0|*>1") THEN
  MESSAGE/ERROR **ERROR ($error_string)
  EXIT/PROGRAM
ENDIF

! Open the window, apply size, scale options
GO LAS_open_window

! Make an underlay which is just a blank plot. This is needeed by the 
! polymark.jnl script used to draw the polygons; It initializes plot parameters.

DEFINE SYMBOL pstart `($data_p_var)[x=@min,y=@min,z=@min,t=@min]`
DEFINE SYMBOL pend `($data_p_var)[x=@max,y=@max,z=@max,t=@max]`
DEFINE AXIS/NPOINTS=10/X=($pstart):($pend)/units="($data_units)" xax_new

LET time_factor = 1
IF `STRCMP("($data_time_units)", "msec") EQ 0` THEN 
   LET time_factor=0.001
   DEFINE SYMBOL data_time_units = sec
ENDIF

DEFINE SYMBOL tstart `($data_t_var)[x=@min,y=@min,z=@min,t=@min]`
DEFINE SYMBOL tend `($data_t_var)[x=@max,y=@max,z=@max,t=@max]`
DEFINE AXIS/NPOINTS=10/T=`time_factor*($tstart)`:`time_factor*($tend)`\
/units=($data_time_units)/t0="($data_time_origin)" tax_new

! draw a blank,labelled rectangle
FILL/NOKEY/NOLAB/LEV=(-100,-99,1) 0*x[gx=xax_new]*t[gt=tax_new]

! Define plot qualifiers for polygon overlay

DEFINE SYMBOL qualifiers = ($qualifiers)/NOLAB

IF ($ferret_use_graticules"1|0|*>1) THEN
  SET MODE GRATICULE:(DASH,COLOR=black)
ENDIF

! Plot no color key

DEFINE SYMBOL qualifiers = ($qualifiers)/NOKEY/OVER

! If a palette is not defined by ferret_palette, use blue.

DEFINE SYMBOL qualifiers = ($qualifiers)/PALETTE=($ferret_palette"blue|default>blue|*>*)

DEFINE SYMBOL poly_command poly($qualifiers)

! Make the polygon plot

GO polymark ($poly_command) ($data_p_var) time_factor*($data_t_var) " " ($ferret_poly_shape"triangle|delta|square|diamond|pentagon|hexagon|circle|star|plus|ex|*>triangle") ($ferret_poly_scale"0.5") 

LABEL/NOUSER `($ppl$xlen)/2`, `-1*($ppl$yorg)/1.5`, 0, 0, 0.14, @AC($ferret_plot_title)

IF ($needs_url"0|*>1") THEN \
LABEL/NOUSER `($ppl$xlen)*.33`, `($ppl$ylen)+1.`, -1, 0, 0.10, "DATA SET: @AS($data_var_url)"


! Do labels for the lon-lat-depth region of the data

LET labdel = 0.2
LET labyloc = `($ppl$ylen) + labdel*3 `
LET labsiz = 0.1

! Longitude
IF ($region_x_lo"0|*>1") THEN
   IF `STRCMP("($region_x_lo)", "($region_x_hi)") EQ 0` THEN
      DEFINE SYMBOL letter = E
      IF `($region_x_lo) LT 0` THEN DEFINE SYMBOL letter = W
      DEFINE SYMBOL upper_left Longitude: `ABS(($region_x_lo))`($letter)
   ELSE
      DEFINE SYMBOL letter = E
      IF `($region_x_lo) LT 0` THEN DEFINE SYMBOL letter = W
      DEFINE SYMBOL letter2 = E
      IF `($region_x_hi) LT 0` THEN DEFINE SYMBOL letter2 = W
      DEFINE SYMBOL upper_left Longitude: `ABS(($region_x_lo))`($letter) to `ABS(($region_x_hi))`($letter2)
   ENDIF
   DEFINE SYMBOL longitude_lab = ($upper_left)
   LABEL/NOUSER 0, `labyloc`, -1, 0.0, `labsiz`, ($upper_left)
ENDIF

! Latitude
LET labyloc = `labyloc - labdel`
IF ($region_y_lo"0|*>1") THEN
   IF `STRCMP("($region_y_lo)", "($region_y_hi)") EQ 0` THEN
      DEFINE SYMBOL letter = N
      IF `($region_y_lo) LT 0` THEN DEFINE SYMBOL letter = S
      DEFINE SYMBOL upper_left Latitude: ABS(($region_y_lo))($letter)
   ELSE
      DEFINE SYMBOL letter = N
      IF `($region_y_lo) LT 0` THEN DEFINE SYMBOL letter = S
      DEFINE SYMBOL letter2 = N
      IF `($region_x_hi) LT 0` THEN DEFINE SYMBOL letter2 = S
      DEFINE SYMBOL upper_left Latitude: `ABS(($region_y_lo))`($letter) to `ABS(($region_y_hi))`($letter2)
   ENDIF
   DEFINE SYMBOL latitude_lab = ($upper_left)
   LABEL/NOUSER 0, `labyloc`, -1, 0.0, `labsiz`, ($upper_left)
ENDIF

! Depth
LET labyloc = `labyloc - labdel`
IF ($region_z_lo"0|*>1") THEN
   IF `STRCMP("($region_z_lo)", "($region_z_hi)") EQ 0` THEN
      DEFINE SYMBOL upper_left Depth ($region_z_lo)
   ELSE
      DEFINE SYMBOL upper_left Depth: ($region_z_lo) to ($region_z_hi)
   ENDIF
   DEFINE SYMBOL depth_lab = ($upper_left)
   LABEL/NOUSER 0, `labyloc`, -1, 0.0, `labsiz`, ($upper_left)
ENDIF


! Put label about striding in upper right.
IF `($pstride"0") GT 0` THEN

   LET labxloc = `($ppl$xlen)`
   LET labdel = 0.2
   LET labsiz = 0.1
   LET labyloc = `($ppl$ylen) + labdel*4 ` 

   IF ($program_name"0|PyFerret>1|*>0") THEN SET TEXT/COLOR=red moveable
   LABEL/NOUSER `labxloc`, `labyloc`, 1, 0.0, `labsiz`, @P2@AC($p_npts) points subsampled to every ($pstride) point

   DEFINE SYMBOL note_num = `($note_num"0") + 1`
   DEFINE SYMBOL note_($note_num)_lab = ($p_npts) points subsampled to every ($pstride) point
ENDIF 


! Save the results

GO LAS_results box

