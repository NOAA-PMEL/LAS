! LAS_set_plot_qualifiers.jnl
!
! ACM 11/18 (Ferret v7.44) use new OVER/AXES behavior to draw axis and 
!                          graticule lines on top of everything else
!

! Use Ferret properties to set plot qualifiers for all plots.

! Get the category of the plot: 1D, 2D non-vector, and vector
! plots already have a symbol itsa_vector_plot.

! This script should be called BEFORE LAS_open_window.jnl because
! it sets LINECOLORS. The LINECOLORS setting needs a SET WIN to
! take effect.

! Do a /TRIM only for color contour plots, not raster plots.

IF `STRLEN("($ferret_view)") EQ 1` THEN  DEFINE SYMBOL oneDplot = 1
IF `STRLEN("($ferret_view)") EQ 1 AND ($data_count"1") EQ 1` THEN  DEFINE SYMBOL oneD_1var = 1

IF `STRLEN("($ferret_view)") GT 1 AND ($itsa_vector_plot"0|*>1") EQ 0` THEN \
 DEFINE SYMBOL twoDplot = 1

! -------- Options for all plots: key, graticules, axis labels

! Option to turn off the plot key

IF ($ferret_plot_key"0|0>1|nokey>1|*>0") THEN
  DEFINE SYMBOL qualifiers = ($qualifiers)/NOKEY
ENDIF

! Graticule lines. For 1D plots, make them gray.

! TODO:  For time plots, either the configurer or the script might want to turn on 
! TODO:  graticules at the small tic marks.  /GRATICULE=(DASH)="small, large"

DEFINE SYMBOL nlinecolors = 8
SET MODE LINECOLORS:($nlinecolors)
PPL COLOR,7,70,70,70     ! gray
PPL COLOR,8,100,100,100  ! white

! For time plots, turn on horizontal graticule lines, unless graticules 
! have been turned off explicitly. Ignore choice of white - its in the menu 
! but useless for line plots.

LET has_t = ($fview"0|T>1|*>0") 
IF `STRLEN("($fview)") EQ 2 AND STRINDEX("($fview)", "T") GT 0` THEN LET has_t = 1

IF `has_t AND ($ferret_use_graticules"1|none>0|notic>0|white>0|*>1)` THEN
  DEFINE SYMBOL onegrat = HGRAT
  IF `STRLEN("($fview)") EQ 2 AND STRINDEX("($fview)", "X") GT 0` THEN DEFINE SYMBOL onegrat = VGRAT
  IF ($ferret_use_graticules"0|black>1|*>0") THEN \
     DEFINE SYMBOL qualifiers = ($qualifiers)/($onegrat)=(DASH,COLOR=black)
  IF ($ferret_use_graticules"1|black>0|gray>1") THEN \
     DEFINE SYMBOL qualifiers = ($qualifiers)/($onegrat)=(DASH,COLOR=7)
  DEFINE SYMBOL ferret_use_graticules = none  ! done, so skip the next IF block
ENDIF

! Otherwise turn them on only if requested 

! Either none or notic removes graticules from the plot 
IF ($ferret_use_graticules"1|none>0|notic>0|*>1") THEN
  DEFINE SYMBOL graticuleColor = black
  IF ($ferret_use_graticules"1|default>1|gray>1|*>0") THEN
     DEFINE SYMBOL graticuleColor = 7
  ELIF ($ferret_use_graticules"0|white>1|*>0") THEN
     DEFINE SYMBOL graticuleColor = 8
  ELIF ($ferret_use_graticules"0|black>1|*>0") THEN
     DEFINE SYMBOL graticuleColor = 1
  ENDIF
  SET MODE GRATICULE:(DASH,COLOR=($graticuleColor))
! If graticules are turned on, turn the tic marks off. (?)
!  PPL TICS,0,0,0,0
ENDIF

! Set up for degrees-minutes-seconds labels on independent variable axis
! If this was not requested, the script just returns.

IF ($ferret_deg_min_sec"0|false>0|*>1") THEN GO LAS_set_deg_min_sec.jnl

! -------- Options for 2D single-variable plots

IF ($twoDplot"0|*>1") THEN

! Set annotation at ends of color key
   IF `($FERRET_VERSION"0") GE 6.2` THEN KEYMARK 1  ! annotate plot keys with the min and max
   IF `($ferret_key_annotate"1") EQ 0` THEN KEYMARK 0  ! override annotation with Ferret property

   ! Contour levels, color levels

   ! All color plots use $ferret_fill_levels. 
   ! Contour plots use $ferret_contour_levels.

   IF ($ferret_contour_style"0|contour_lines>1|*>0") THEN
      IF ($ferret_contour_levels"0|*>1") THEN \
       DEFINE SYMBOL qualifiers = ($qualifiers)/LEVELS=($ferret_contour_levels)
      IF `($ferret_contour_levels"0|*>1") EQ 0` THEN \
       DEFINE SYMBOL qualifiers = ($qualifiers)/LEVELS=($ferret_fill_levels)
   ELSE
      IF ($ferret_fill_levels"0|*>1") THEN \
       DEFINE SYMBOL qualifiers = ($qualifiers)/LEVELS=($ferret_fill_levels)
   ENDIF


   ! Set the plot type (SHADE or CONTOUR)

   ! If ferret_contour_style is specified (from Plot Options on the UI), use that. 
   ! Else if ferret_fill_type is specified, (comes from configuration), use that. 
   ! Else use the default in the plot script

   IF `($ferret_contour_style"0|*>1") EQ 0` THEN
     IF ($ferret_fill_type"0|default>1|raster>1|shade>1|color_filled_contours>1|fill>1|color_filled_plus_lines>1|contour>1|contour_lines>1|raster_plus_lines>1|*>0") THEN\
      DEFINE SYMBOL ferret_contour_style = ($ferret_fill_type"default|raster>raster|shade>raster|fill>default|contour>contour_lines|color_filled_plus_lines|*>default")
   ENDIF


   DEFINE SYMBOL plot_type =($ferret_contour_style"FILL|default>FILL|raster>SHADE|\
color_filled_contours>FILL|color_filled_plus_lines>FILL|contour_lines>CONTOUR|raster_plus_lines>SHADE")

   ! For all FILL plots, we will first do a SHADE underlay to 
   ! get the plot to draw all the way to the edges.

   DEFINE SYMBOL shade_underlay = 0
   IF ($plot_type"0|FILL>1|*>0) THEN DEFINE SYMBOL shade_underlay = 1

   IF `($ferret_google_plot"0") EQ 0` THEN 
      IF `(($degenerate_2d"0|0|*>1") EQ 0) AND\
           ($shade_underlay"0")` THEN DEFINE SYMBOL shade_qualifiers = ($shade_qualifiers)/TRIM
   ENDIF
   IF ($shade_underlay"0") THEN DEFINE SYMBOL shade_qualifiers = ($shade_qualifiers)/LEVELS=($ferret_fill_levels)

   ! Color palette

   IF ($ferret_palette"0|*>1") THEN DEFINE SYMBOL qualifiers = \
    ($qualifiers)/PALETTE=($ferret_palette"default|*>*)

   ! 2D fill style  (from las_initialize_variable)

   ! If ferret_contour_style is specified (from Plot Options on the UI), use that. 
   ! Else if ferret_fill_type is specified, (comes from configuration), use that. 
   ! Else use the default in the plot script

   IF `($ferret_contour_style"0|*>1") EQ 0` THEN
     IF ($ferret_fill_type"0|default>1|raster>1|shade>1|color_filled_contours>1|fill>1|color_filled_plus_lines>1|contour>1|contour_lines>1|raster_plus_lines>1|*>0") THEN\
      DEFINE SYMBOL ferret_contour_style = ($ferret_fill_type"default|raster>raster|shade>raster|fill>default|contour>contour_lines|color_filled_plus_lines|*>default")
   ENDIF

   IF `($ferret_contour_style"0|default>1|raster>1|shade>1|color_filled_contours>1|fill>1|color_filled_plus_lines>1|contour_lines>1|raster_plus_lines>1|*>0") EQ 0` THEN 

     IF ($ferret_fill_type"0|default>1|raster>1|shade>1|color_filled_contours>1|fill>1|color_filled_plus_lines>1|contour>1|contour_lines>1|raster_plus_lines>1|*>0") THEN\
      DEFINE SYMBOL ferret_contour_style = ($ferret_fill_type"default|shade>raster|fill>default|contour>contour_lines|color_filled_plus_lines|*>default")
   ENDIF

   IF `($ferret_contour_style"0|default>0|raster>0|shade>0|color_filled_contours>0|fill>0|color_filled_plus_lines>1|raster_plus_lines>1|*>0")` THEN 
      DEFINE SYMBOL contour_over = 1
      IF ($ferret_contour_levels"0|*>1") THEN 
         DEFINE SYMBOL levsym = /LEVELS=($ferret_contour_levels)
      ELSE
        IF ($ferret_fill_levels"0|*>1") THEN \
         DEFINE SYMBOL levsym = /LEVELS=($ferret_fill_levels)
      ENDIF
   ENDIF

   IF ($ferret_key_centerlab"0|0|*>1") THEN DEFINE SYMBOL qualifiers = ($qualifiers)/KEY=CONT,CENT

! Only draw graticule lines on the last layer drawn, here one of these:
!  - contour plot, if we're doing a line contour with land outlines
!  - shade plot, if we're doing a raster plot with land outlines
!  - color filled contour plot if were doing a fill plot with land outlines,
!  - land fill, if we're doing any of these with filled land

   IF `($ferret_version"0") GE 7.432` THEN
   IF `($ferret_view"0|xy>1|*>0") AND \
    ($ferret_land_type"1|none>0|contour>0|filled>1|shade>1|default>1|*>0")` THEN
     DEFINE SYMBOL qualifiers = ($qualifiers)/NOAXES
   ELSE
     IF ($shade_underlay"0") THEN
        DEFINE SYMBOL shade_qualifiers = ($shade_qualifiers)/NOAXES
        DEFINE SYMBOl do_axes = /AXES
     ENDIF
   ENDIF
   ENDIF ! ferret_version


ENDIF ! end of options for twoDplot

! -------- Options for line styles (Note currently we dont allow setting
!          the color of contour lines, but we could.)

! ---------------- Line color for single-line, vector, or contour plots
!                  Do not set a /COLOR qualifier for multi-line plots  
!                  Default is blue for line, vector, contour plots. 
!                  Line-color is red for difference plots. 
!                  
IF `($line_drawn"0|*>1") EQ 0` THEN \
DEFINE SYMBOL line_drawn = `($oneDplot"0|*>1") OR ($itsa_vector_plot"0|*>1") OR ($plot_type"0|CONTOUR>1|*>0")`


sh sym ferret_line_color
IF `($line_drawn"0") AND ($itsa_multi_lineplot"0|*>1") EQ 0` THEN

   IF ($ferret_diff_var"0|*>1") THEN DEFINE SYMBOL ferret_line_color = red
   IF ($ferret_line_color"0|multi>1|*>0") THEN 
      DEFINE SYMBOL qualifiers = ($qualifiers)/COLOR
   ELSE
      DEFINE SYMBOL qualifiers = ($qualifiers)/COLOR=($ferret_line_color%blue|default>blue|black|red|blue|green|lightblue|purple|*%)
   ENDIF

ENDIF ! skipped color setting if its a multi-line plot

! ---------------- Thickness options for all 1D plots, Vector plots, and Contour plots
!                  Thicknum is used in the key for multi-line plots.

IF ($line_drawn) THEN

   DEFINE SYMBOL plotsymbol = 25
!   IF ($itsa_multi_lineplot"0|*>1") THEN DEFINE SYMBOL plotsymbol = dot
   DEFINE SYMBOL thicknum = 0

   IF `($ferret_line_thickness%0|default>1|*>1%)` THEN
      DEFINE SYMBOL qualifiers = ($qualifiers)($ferret_line_thickness%/THICK=1|default>/THICK=1|1>/THICK=1|2>/THICK=2|3>/THICK=3|*>/THICK=1%)
      IF `($ferret_line_thickness%1|1|2|3|*>1%) EQ 2` THEN 
         IF ($plotsymbol"0|*>1") THEN DEFINE SYMBOL plotsymbol = 17/SIZ=0.12
         DEFINE SYMBOL thicknum = 1
      ENDIF

      IF `($ferret_line_thickness%1|1|2|3|*>1%) EQ 3` THEN 
         IF ($plotsymbol"0|*>1") THEN DEFINE SYMBOL plotsymbol = 27/SIZ=0.15
         DEFINE SYMBOL thicknum = 2
      ENDIF
   ENDIF

   IF `($ferret_annotations"0|*>1") AND ($data_count) EQ 1 AND ($twoDplot"0|*>1") EQ 0` \
   THEN DEFINE SYMBOL qualifiers = ($qualifiers)/NOYADJUST

ENDIF  ! end of options for plots drawn with lines

! ---------------- All oneD plots, settings for option to 
!                  set dependent-axis scale.

IF ($oneDplot"0|*>1") THEN

! If the user gave dependent axis scaling, 
! 1) remove any surrounding parentheses
! 2) check for third argument and add it if needed.

   IF ($ferret_dep_axis_scale"0|*>1") THEN

     IF `STRINDEX("($ferret_dep_axis_scale)", "(") GT 0` THEN
        LET paren = `STRINDEX("($ferret_dep_axis_scale)", "(")`
        LET slen = `STRLEN("($ferret_dep_axis_scale)")`
        DEFINE SYMBOL ferret_dep_axis_scale = `SUBSTRING("($ferret_dep_axis_scale)", paren+1, slen-1)`
        
        LET paren = `STRINDEX("($ferret_dep_axis_scale)", ")")`
        LET slen = `STRLEN("($ferret_dep_axis_scale)")`
        DEFINE SYMBOL ferret_dep_axis_scale = `SUBSTRING("($ferret_dep_axis_scale)", 1, slen-1)`
     ENDIF

     LET slen = STRLEN("($ferret_dep_axis_scale)")
     LET nc = 0
     REPEAT/RANGE=2:`slen`/NAME=m (let c = `m`; \
        DEFINE SYMBOL next = `SUBSTRING("($ferret_dep_axis_scale)", c, 1)`; \
        IF `STRCMP("($next)", ",") EQ 0` THEN let nc = `nc+1`)

    IF `nc EQ 1` THEN   
        LET c = STRINDEX ("($ferret_dep_axis_scale)", ",")
        DEFINE SYMBOL lo_ax = `SUBSTRING("($ferret_dep_axis_scale)", 1, c-1)`
        DEFINE SYMBOL hi_ax = `SUBSTRING("($ferret_dep_axis_scale)", c+1, slen)`
        PPL %RANGE ($lo_ax), ($hi_ax), 10
        DEFINE SYMBOL ferret_dep_axis_scale = ($ferret_dep_axis_scale),($ppl$range_inc)
     ENDIF
   ENDIF

ENDIF   ! end of options for oneDplot, dependent axis scale setup

! ---------------- sanity check on ferret_trend_line.

IF `($ferret_trend_line"0|1|2|*>0") EQ 0` THEN \
   CANCEL SYMBOL ferret_trend_line

! ---------------- Settings for XY vector and XY vector difference plots.

IF `($itsa_vector_plot"0|*>1") AND ($ferret_view"0|xy>1|*>0")` THEN
   
   ! Vector style arrow (default) or flowline=1
   DEFINE SYMBOL flowline_vectors = 0
   IF `($ferret_vector_style"0|default>0|1|*>0") GT 0` THEN  
      DEFINE SYMBOL qualifiers = ($qualifiers)/FLOWLINE
      DEFINE SYMBOL flowline_vectors = 1
   ENDIF
   
   ! Vector density for flowline plots
   
   IF `($ferret_vector_density"0|*>1") GT 0` THEN  
      DEFINE SYMBOL qualifiers = ($qualifiers)/DENSITY=($ferret_vector_density)
   ENDIF
   
   ! Vector length scale
   
   IF `($ferret_vector_length"0") GT 0` THEN  
      DEFINE SYMBOL qualifiers = ($qualifiers)/LENGTH=($ferret_vector_length)
   ENDIF
   
   ! Vector xskip and yskip set by the user
   IF ($ferret_vector_skip"0|*>1") THEN DEFINE SYMBOL ferret_vector_subsampling = ($ferret_vector_skip)
   
   IF ($ferret_vector_subsampling"0|*>1") THEN
      LET comloc = `STRINDEX("($ferret_vector_subsampling)", ",")`
      LET nlen = `STRLEN("($ferret_vector_subsampling)")`
      IF `comloc GT 1` THEN
          DEFINE SYMBOL xskp = `SUBSTRING ("($ferret_vector_subsampling)", 1, comloc-1)`
          DEFINE SYMBOL yskp = `SUBSTRING ("($ferret_vector_subsampling)", comloc+1, nlen-comloc)`
       ELSE
          DEFINE SYMBOL xskp = ($ferret_vector_subsampling)
          DEFINE SYMBOL yskp = ($ferret_vector_subsampling)
       ENDIF
   
       LET xs = STRFLOAT ("($xskp)")
       LET ys = STRFLOAT ("($yskp)")
   
       IF ($error_status"0|*>1") THEN
          MESSAGE/ERROR **ERROR format of vector subsampling is xsub,ysub
          EXIT/PROGRAM
       ENDIF
   
       DEFINE SYMBOL qualifiers = ($qualifiers)/XSKIP=`xs`/YSKIP=`ys`
   
   ENDIF
ENDIF  ! end of XY vector plot settings.

IF `($graticuleColor"0|*>1") EQ 0` THEN DEFINE SYMBOL graticuleColor = 7


!  ----------------- End of LAS_set_plot_qualifiers.jnl ------------------------------------

