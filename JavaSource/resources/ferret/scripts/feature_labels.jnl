!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! $Header$
! feature_labels.jnl
!
! Add to annotations the upper right with number of trajectories or profiles
! and number of valid and missing points shown.
! On prop-prop plots, don't show missing. The count of missing-values in the
! data is not distinguishable from the missing data due to applying constraints. 
! 4/3/2017 *acm* Additions for point data types
!  8/2017 *acm* Account for change to expndi_by_m_function
! 10/2017 *acm* Handle the ferret_plot_var if its string type

! If all labeling turned off just exit.
IF `($ferret_label"1|0|1|*>1") EQ 0` THEN EXIT/SCRIPT

! If it is not a feature-type dataset, exit
IF `($feature_type"0|*>1") EQ 0` THEN EXIT/SCRIPT


IF ($feature_type"0|point>1|*>0") THEN
   DEFINE SYMBOL note_num = `($note_num"0") + 1`
   DEFINE SYMBOL note_($note_num)_lab = ($ngood_data) points shown 
   DEFINE SYMBOL plusmissing = (($nbad_data) missing)
   IF ($nbad_data"0|0|*>1") THEN  DEFINE SYMBOL note_($note_num)_lab = ($note_($note_num)_lab) ($plusmissing)
   EXIT/SCRIPT
ENDIf

LET check_var = $1%XSEQUENCE(($ferret_plot_var))%
DEFINE SYMBOL vtype = `check_var,return=dtype`
IF ($vtype"0|char>1|*>0) THEN LET check_var = XSEQUENCE( ($ferret_plot_var_2"($data_x_var%1%)") )

! Fill with a known value to distinguish between input missing values
! and values missing because of the different length of trajectories or profiles.

! Define variable prof_traj by trajectory or profile length
! Count number of good and missing values in each.

LET datmax = check_var[I=@max]
IF `(MISSING(datmax,100) EQ 100)  AND (MISSING(datmax,10) EQ 10)` THEN LET datmax = 0  

IF `datmax LE 1` THEN
   LET fillval = 100
ELSE
   LET fillval =  `10^(INT(LOG(datmax))+1)`
ENDIF

LET var_fill = MISSING(check_var,`fillval`)
LET var_fill_z =  EXPNDI_BY_Z_COUNTS(var_fill, XSEQUENCE(($rowvar)),`longest`)

LET var_flag_z = IF var_fill_z EQ `fillval` THEN 1
LET nbad_in_prof_traj =  var_flag_z[K=@NGD]
LET ngood_in_prof_traj = var_fill_z[K=@NGD] - var_flag_z[K=@NGD]

LET trajectory_mask = 1
IF ($text_mask_trajectory"0|*>1") THEN 
   LET trajectory_mask = XSEQUENCE(($text_mask_trajectory))
ELSE
   IF `IS_ELEMENT_OF_STR_N(varnames, "($feature_variable)") NE 0` THEN 
      LET trajectory_m = 1+0*_m[ge=($feature_variable)]
      LET trajectory_mask =  XSEQUENCE(trajectory_m)
   ENDIF
ENDIF

LET ngood_chosen_prof_traj = subset_mask* trajectory_mask* ngood_in_prof_traj
LET nbad_chosen_prof_traj = subset_mask* trajectory_mask*  nbad_in_prof_traj

! Just compute one of these, and subtract from the total in dataset

IF `($ngood_data"0|*>1") EQ 0` THEN 
   IF `($ferret_memory"25.6") LT 700` THEN SET MEM/SIZ=700
   LET allsize = `check_var,RETURN=isize`
   DEFINE SYMBOL nbad_data = `nbad_chosen_prof_traj[i=@SUM]`
   DEFINE SYMBOL ngood_data = `allsize - ($nbad_data)`
ENDIF

LET allvars = ..varnames

DEFINE SYMBOL maskdir =  `feature_mask,return=shape`
IF ($maskdir"0|POINT>1|*>0") THEN 
   DEFINE SYMBOL prof_traj_shown = 1
ELSE
   IF ($prof_traj_shown"1|*>0") THEN DEFINE SYMBOL prof_traj_shown = `feature_mask[($maskdir)=@sum]`
   DEFINE SYMBOL prof_traj_shown = ($prof_traj_shown"($prof_traj_max)")
ENDIF

! c_s used to add plural s to a label if more than one trajectory or profile.
CANCEL SYMBOL c_s
IF `($prof_traj_shown"0") GT 1` THEN DEFINE SYMBOL c_s = s
LET slen = STRLEN("($feature_type)")
IF `slen EQ STRRINDEX("($feature_type)", "s")` THEN CANCEL SYMBOL c_s

IF `($c_s"0|*>1") AND ($feature_type"0|trajectory>1|*>0")` THEN\
 DEFINE SYMBOL feature_type = trajectorie

DEFINE SYMBOL note_num = `($note_num"0") + 1`
IF ($its_profile_map"0|*>1") THEN
   DEFINE SYMBOL note_($note_num)_lab =  ($prof_traj_shown) ($feature_type)($c_s) locations shown
ELSE
   DEFINE SYMBOL note_($note_num)_lab =  ($prof_traj_shown) ($feature_type)($c_s), ($ngood_data) points shown 
ENDIF

IF `(($its_prop_plot"0|0|1|*>1") EQ 0) AND ($nbad_data"0|0|*>1")` THEN 
   IF `($ngood_data) NE 0` THEN DEFINE SYMBOL plusmissing = (plus ($nbad_data) missing)
   IF `($ngood_data) EQ 0` THEN DEFINE SYMBOL plusmissing = (($nbad_data) missing)
   IF ($its_profile_map"0|*>1") THEN
      DEFINE SYMBOL note_($note_num)_lab = ($prof_traj_shown) ($feature_type)($c_s) locations shown
   ELSE
      DEFINE SYMBOL note_($note_num)_lab = ($prof_traj_shown) ($feature_type)($c_s), ($ngood_data) points shown ($plusmissing)
   ENDIF
ENDIF

! If the constraint was where the color variable is valid, then no need for (0 missing)

IF ($its_profile_map"0|*>1") THEN
   IF `($has_missing"0|0>1|*>0") AND ($nbad_data"1|0>1|*>0")` THEN \
    DEFINE SYMBOL note_($note_num)_lab = ($prof_traj_shown) ($feature_type)($c_s) locations shown
ELSE
   IF `($has_missing"0|0>1|*>0") AND ($nbad_data"1|0>1|*>0")` THEN \
    DEFINE SYMBOL note_($note_num)_lab = ($prof_traj_shown) ($feature_type)($c_s), ($ngood_data) points shown
ENDIF

! Notation about the decimation (if data is pre-decimated)

! Don't label the decimation counts.  It's too inaccurate and confusing.
DEFINE SYMBOL nolabels_decimation_counts = 1

IF `($piecewise_decimation"0|*>1") AND ($ngood_data) GT 0` THEN 

IF ($nolabels_decimation_counts"0|*>1") THEN ! make points-shown annotations or not

   DEFINE SYMBOL note_($note_num)_lab = ($prof_traj_shown) ($feature_type)($c_s) shown

   DEFINE SYMBOL note_num = `($note_num"0") + 1`
   DEFINE SYMBOL note_($note_num)_lab = Data subsampled for efficiency (<a target=&quot;_blank&quot; href=doc/piecewise_decimation_reference.html>explanation</a>)
ELSE  ! make points-shown annotations or not

   LET full_good = -9999

   IF `(IS_ELEMENT_OF_STR_N(varnames, "nobs_full") EQ 0) OR\
    (IS_ELEMENT_OF_STR_N(varnames, "nobs_deci") EQ 0)` THEN 
       MESSAGE/ERROR **ERROR nobs_full and nobs_deci not in the netCDF file"
       EXIT/PROGRAM
   ENDIF

! compute overall fraction for decimation of the cruises returned
    LET frac_deci = `nobs_deci[m=@sum]/nobs_full[m=@sum]`
    LET frac_deci_all = `nobs_deci[m=@sum]/nobs_full[m=@sum]`

   IF `frac_deci GT 1` THEN
      LET frac_deci = 1 
      
   ELIF `frac_deci GT 0` THEN 
      LET full_good = ($ngood_data)/frac_deci
      LET full_bad  = ($nbad_data)/frac_deci
   ENDIF
   let full_all = `full_good`

! Make the computation on a per-cruise basis, the count of good data
! in the cruise related to the decimation fraction for that cruise

   LET frac_deci = nobs_deci/nobs_full  ! fraction for each feature

   LET maxrow = `($rowvar)[m=@max]`
   DEFINE AXIS/x=1:`maxrow`:1 xrow
   LET xvar = x[gx=xrow]

   LET ok = IF ($data_var_in) THEN 1
   LET ok2d = EXPNDI_BY_M_COUNTS(ok, ($rowvar), xvar)
   LET ok_cruise = ok2d[x=@sum] 
   LET ok_cruise_full = IF frac_deci GT 0 THEN ok_cruise/frac_deci ELSE 0
   LET full_good = ok_cruise_full[m=@SUM]

   IF `full_good GT 1.e6` THEN 
      DEFINE SYMBOL approx_msg = `full_good/1.e6,prec=3` million
   ELIF `full_good GT 1.e3` THEN 
      DEFINE SYMBOL approx_msg = `full_good/1.e3,prec=2` thousand 
   ELSE
      DEFINE SYMBOL approx_msg = `full_good,prec=3`
   ENDIF

   IF `($nbad_data"0|*") GT 0` THEN
      LET full_bad = full_good * ($nbad_data)/($ngood_data)
      IF `full_bad GT 1.e6` THEN 
         DEFINE SYMBOL approx_bad = `full_bad/1.e6,prec=2` million
      ELIF `full_bad GT 1.e3` THEN 
         DEFINE SYMBOL approx_bad = `full_bad/1.e3,prec=2` thousand 
      ELSE
         DEFINE SYMBOL approx_bad = `full_bad,prec=2`
      ENDIF
   ENDIF

   DEFINE SYMBOL note_($note_num)_lab =  ($prof_traj_shown) ($feature_type)($c_s), approx. ($approx_msg) valid obs
   IF ($approx_bad"0|*>1") THEN \
   DEFINE SYMBOL note_($note_num)_lab =  ($prof_traj_shown) ($feature_type)($c_s), approx. ($approx_msg) valid obs plus ($approx_bad) missing

! Put a link to the doc containing description of the decimation scheme. 
   DEFINE SYMBOL note_num = `($note_num"0") + 1`
   DEFINE SYMBOL note_($note_num)_lab = Subsample of ($ngood_data) valid points shown (<a target=&quot;_blank&quot; href=doc/piecewise_decimation_reference.html>explanation</a>)
   IF `($nbad_data"0") GT 0` THEN \
      DEFINE SYMBOL note_($note_num)_lab = Subsample of ($ngood_data) valid and ($nbad_data) missing \
points shown (<a target=&quot;_blank&quot; href=doc/piecewise_decimation_reference.html>explanation</a>)

ENDIF ! make points-shown annotations or not
ENDIF



!---------------- end of feature_labels.jnl -------------------------
