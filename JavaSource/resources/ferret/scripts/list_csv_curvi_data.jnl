!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! list_csv_curvi_data.jnl
! 
! Author: ansley 
! Date: 2011/05/16
!      4/2013 ACM Implement the Ferret property ferret_start_memory
! 12/2016 set list precision to 7
!
! Called by list_csv_data.jnl 
! Write csv data: date/time, X, Y, Z, var1, var2, ...

! Cannot list out a pseudo-variable, e.g. Z. In the initialization,
! check for pseutonames. If the variable name is a pseudo-var name, 
! write out name_1 e.g. Z_1 with all the same attributes.

DEFINE SYMBOL frmt = FORMAT=comma/NOROW

! Get the I,J range for the requested output rectangle

GO get_curv_coord_bbox

! Initialize data and define 1-d lists of variables to write out


! Now get the start, stop and size information
DEFINE SYMBOL isize `($clon_imax) - ($clon_imin) + 1`
DEFINE SYMBOL jsize `($clat_jmax) - ($clat_jmin) + 1`

LET testvar = ($data_($var_num)_var)[($region_zt)]
DEFINE SYMBOL kmin `testvar,return=kstart`
DEFINE SYMBOL kmax `testvar,return=kend`
DEFINE SYMBOL ksize `testvar,return=ksize`
DEFINE SYMBOL lmin `testvar,return=lstart`
DEFINE SYMBOL lmax `testvar,return=lend`
DEFINE SYMBOL lsize `testvar,return=lsize`

! RETURN=*start returns 0 if the axis is an undefined axis
! This messes messes up the repeat loop below if the data is chunked.
! A few more lines of code to handle this.

IF `($kmin) LT 1` THEN DEFINE SYMBOL kmin 1
IF `($kmax) LT 1` THEN DEFINE SYMBOL kmax 1
IF `($lmin) LT 1` THEN DEFINE SYMBOL lmin 1
IF `($lmax) LT 1` THEN DEFINE SYMBOL lmax 1

DEFINE SYMBOL xx = 0
DEFINE SYMBOL yy = 0
DEFINE SYMBOL zz = 0
DEFINE SYMBOL tt = 0

IF `STRINDEX("($ferret_view)", "x") GT 0` THEN \
   DEFINE SYMBOL xx = ($ferret_curvi_coord_lon)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]
IF `STRINDEX("($ferret_view)", "y") GT 0` THEN \
   DEFINE SYMBOL yy = ($ferret_curvi_coord_lat)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]
IF `STRINDEX("($ferret_view)", "z") GT 0` THEN \
   DEFINE SYMBOL zz = z[gz=($data_var),($region_z)]
IF `STRINDEX("($ferret_view)", "t") GT 0` THEN \
   DEFINE SYMBOL tt = t[gt=($data_var),($region_t)]


IF `STRINDEX("($ferret_view)", "x") GT 0` THEN 
   LET longitude = XSEQUENCE(($xx) + 0*($yy) + 0*($zz) + 0*($tt)) 
   LET/UNITS="`($data_0_var),RETURN=xunits`"/TITLE="Longitude from curvilinear grid" LON = longitude 
   DEFINE SYMBOL xlist = LON, 
ENDIF

IF `STRINDEX("($ferret_view)", "y") GT 0` THEN 
   LET latitude = XSEQUENCE( 0*($xx) + ($yy) + 0*($zz) + 0*($tt))
   LET/UNITS="`($data_0_var),RETURN=yunits`"/TITLE="Latitude from curvilinear grid" LAT = latitude
   DEFINE SYMBOL ylist = lat, 
ENDIF

IF `STRINDEX("($ferret_view)", "z") GT 0` THEN 
   IF `($data_0_var),RETURN=isdepth` THEN
      LET depth = XSEQUENCE(0*($xx) + 0*($yy) + ($zz) + 0*($tt))
      LET/UNITS="`($data_0_var),RETURN=zunits`"/TITLE=depth dep = depth
      DEFINE SYMBOL zlist = dep, 
   ELSE
      LET height = XSEQUENCE(0*($xx) + 0*($yy) + ($zz) + 0*($tt))
      LET/UNITS="`($data_0_var),RETURN=zunits`"/TITLE=height ht = height
      DEFINE SYMBOL zlist = ht, 
   ENDIF
ENDIF

IF `STRINDEX("($ferret_view)", "t") GT 0` THEN 
   IF `($ferret_timelab_res"0|*>1") EQ 0` THEN DEFINE SYMBOL ferret_timelab_res = day
   LET ttime = XSEQUENCE(0*($xx) + 0*($yy) + 0*($zz) + ($tt)) 
   LET/UNITS="`($data_0_var),RETURN=tunits` since `($data_0_var),RETURN=t0`" TIME = ttime
   LET datetime = TAX_DATESTRING (ttime, t[gt=($data_0_var)], "($ferret_timelab_res)")
   IF ($ferret_timelab_res"|year>1|month>1|*>0") THEN LET TIME = datetime
   DEFINE SYMBOL tlist = TIME, 
ENDIF

IF ($region_zt"0|*>1") THEN
LET/units="($data_($var_num)_units)"/TITLE="`($data_0_var),RETURN=title`" ($data_0_var_orig) = XSEQUENCE(\
 ($data_0_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax),($region_zt)])
ELSE
LET/units="($data_($var_num)_units)"/TITLE="`($data_0_var),RETURN=title`" ($data_0_var_orig) = XSEQUENCE(\ 
 ($data_0_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax),($region_zt)])
ENDIF
DEFINE SYMBOL vars_out = ($tlist) ($xlist) ($ylist) ($zlist) ($data_0_var_orig)


IF `($data_count"1") GT 1` THEN
   REPEAT/RANGE=1:`($data_count"1")-1`/NAME=outvar (\
      DEFINE SYMBOL var_num = `outvar`; \
      LET/units="($data_($var_num)_units)"/TITLE="`($data_($var_num)_var),RETURN=title`" ($data_($var_num)_var_orig) = ($ferret_list_var_($var_num)); \
      DEFINE SYMBOL vars_out = ($vars_out), ($data_($var_num)_var_orig) )
ENDIF

LET ndims = `STRLEN("($ferret_view)")`
LET nlist = ndims + ($data_count)

! the default is set under 1/4 of Ferret's memory allowing for LET definitions 
LET use_size = 1000000*($ferret_memory)/4.
LET max_size = ($MAX_LIST_SIZE"`use_size`")

! Size of the data variable 

LET size = ($isize)*($jsize)*($ksize)*($lsize)

IF `size* nlist GT max_size` THEN
   IF `($ferret_memory"25.6") LT 300` THEN SET MEM/SIZ=300
   LET use_size = 1000000*($ferret_memory)/4.
ENDIF

SET LIST/PREC=7/FILE="($result_ferret_listing_filename)"
LIST/NOHEAD/NOROW/FILE/CLOBBER/FORMAT=("Total Number of Records", F16.0) SIZE

DEFINE SYMBOL list_quals = APPEND

IF `size* nlist LE max_size` THEN
! 
! ... list in one big chunk
!
   IF `($ferret_format"0|asc>1|*>0") + ($ferret_format"0|txt>1|*>0") GT 0` THEN  
      IF ($var_history"0|*>1") THEN LIST/($list_quals)/NOHEAD/FORMAT=(A)/FILE="($result_ferret_listing_filename)" var_hist
      DEFINE SYMBOL list_quals = APPEND
   ENDIF

   LIST/($list_quals)/FILE/($frmt) ($vars_out)

ELSE
   LET nchunk = INT(size/ max_size)
   IF `nchunk LT 2` THEN LET nchunk = 2
   LET ichunk = INT(size/ nchunk) 
   LET i1 = 1
   LET i2 = `ichunk`
   REPEAT/RANGE=1:`nchunk+1` ( \
     LIST/($list_quals)/FILE/($frmt)/I=`i1`:`i2` ($vars_out); \
     CANC MEM/ALL; \
     DEFINE SYMBOL list_quals = APPEND/NOHEAD; \
     LET i1 = `i2+1`; \
     LET i2 = `i2+ichunk`; \
     IF `i1 GT size` THEN EXIT/LOOP; \
     IF `i2 GT size` then LET i2 = size)

ENDIF
! End of script ---------- list_csv_curvi_data.jnl----------------------------
