! setup_prop_prop.jnl
! 10/4/2016 fixes so init scripts still work
!  9/  2017  Set up for listings that include a fourth variable, e.g. second qc flag.
! 10/2017    Set up to list up to a total of 10 variables, data_0_var through data_9_var.
! 11/2017    Allow for datasets where the variables come from different URLs.
!  1/2018 Time will only be the independent variable - no vertical time axis.

IF `(($its_listing"0|*>1") EQ 0) AND (($data_count"0") LT 2)` THEN
  MESSAGE/ERROR **ERROR Expecting two variables, but only received ($data_count)
  EXIT/PROGRAM
ENDIF

DEFINE SYMBOL its_prop_prop_plot = 1  ! used in setting titles and in RESULTS

LET vnames = ..varnames

! Define symbols associated with the region and data and perform any
! initialization needed for this dataset.

! Initialize



!!! Plot time only as the independent variable.  If they
!!! have sent in time as the dependent var, swap it.

IF ($data_1_var"0|*>1") THEN GO LAS_var_lon_lat_time ($data_1_var)

IF `($var_is_time"0") AND ($its_prop_plot"0|0|*>1")` THEN
   
   DEFINE SYMBOL data_sw_dataset_url = ($data_0_url)
   DEFINE SYMBOL data_sw_region = ($data_0_region)
   DEFINE SYMBOL data_sw_title = ($data_0_title)
   DEFINE SYMBOL data_sw_units = ($data_0_units)
   DEFINE SYMBOL data_sw_url = ($data_0_url)
   DEFINE SYMBOL data_sw_var = ($data_0_var)
   
   DEFINE SYMBOL data_0_dataset_url = ($data_1_url)
   DEFINE SYMBOL data_0_region = ($data_1_region)
   DEFINE SYMBOL data_0_title = ($data_1_title)
   DEFINE SYMBOL data_0_units = ($data_1_units)
   DEFINE SYMBOL data_0_url = ($data_1_url)
   DEFINE SYMBOL data_0_var = ($data_1_var)
   
   DEFINE SYMBOL data_1_dataset_url = ($data_sw_url)
   DEFINE SYMBOL data_1_region = ($data_sw_region)
   DEFINE SYMBOL data_1_title = ($data_sw_title)
   DEFINE SYMBOL data_1_units = ($data_sw_units)
   DEFINE SYMBOL data_1_url = ($data_sw_url)
   DEFINE SYMBOL data_1_var = ($data_sw_var)

   CANCEL SYMBOL data_sw*

ENDIF

GO LAS_unquote_string data_0_title

LET data_0_title = "($data_0_title)"
LET data_0_units = " (($data_0_units))"

IF ($data_0_units"0|none>1|text>1|*>0") THEN LET data_0_units = ""

DEFINE SYMBOL data_0_var_in = ($data_0_var)

IF `($data_count"0") GE 2` THEN 
   GO LAS_unquote_string data_1_title
   LET data_1_title = "($data_1_title)"
   LET data_1_units = " (($data_1_units))"
   IF ($data_1_units"0|none>1|text>1|*>0") THEN LET data_1_units = ""
   IF `($data_2_var_in"0|*>1") EQ 0` THEN DEFINE SYMBOL data_1_var_in = ($data_1_var)
ENDIF

IF `($data_count"0") GE 3` THEN 
   GO LAS_unquote_string data_2_title
   LET data_2_title = "($data_2_title)"
   LET data_2_units = ""
   IF ($data_2_units"0|text>0|none>0|*>1") THEN LET data_2_units = " (($data_2_units))"
   IF `($data_2_var_in"0|*>1") EQ 0` THEN DEFINE SYMBOL data_2_var_in = ($data_2_var)
ENDIF

IF `($data_count"0") GE 4` THEN 

   REPEAT/RANGE=3:`($data_count)-1`/NAME=c (\
      DEFINE SYMBOL list_var = `c`; \
      GO LAS_unquote_string ($data_($list_var)_title);\
      LET data_($list_var)_title = "($data_($list_var)_title)"; \
      LET data_($list_var)_units = ""; \
      IF ($data_($list_var)_units"0|text>0|none>0|*>1") THEN LET data_($list_var)_units = " (($data_($list_var)_units))"; \
      IF `($data_($list_var)_var_in"0|*>1") EQ 0` THEN DEFINE SYMBOL data_($list_var)_var_in = ($data_($list_var)_var); \
      )
ENDIF

GO LAS_initialize_region 0

GO LAS_initialize_data 0

! Check for errors (They often occur during dataset initialization.)

IF ($error_status"0|*>1") THEN
  MESSAGE/ERROR **ERROR ($error_string)
  EXIT/PROGRAM
ENDIF

! Here is variable 0 title 
DEFINE SYMBOL ferret_title_0 = ($ferret_plot_title"($data_0_var)")
IF `(STRINDEX("($ferret_title_0%0%)", "Time") GT 0) AND (STRINDEX("($ferret_title_0%0%)", " since ") GT 0)` THEN \
DEFINE SYMBOL variable_0_lab = Time
DEFINE SYMBOL variable_0_lab = ($ferret_title_0)
LET variable_0_lab = STRCAT(data_0_title, data_0_units)

DEFINE SYMBOL fer_sym = ferret_plot
IF ($do_curvi_xy"0") THEN DEFINE SYMBOL fer_sym = ferret_plot_base
DEFINE SYMBOL ferret_plot_var_0 = ($($fer_sym)_var)

LET/TITLE="($ferret_title_0)" xvar = XSEQUENCE(($($fer_sym)_var)) 
IF ($its_trajectory_corr"0|*>1") THEN LET/TITLE="($ferret_title_0)" xvar = ($($fer_sym)_var)


DEFINE SYMBOL vshape = `($($fer_sym)_var),RETURN=SHAPE`
IF `STRCMP("($vshape)", "E") EQ 0` THEN 
   LET ne_var = `($($fer_sym)_var),RETURN=msize`
   DEFINE AXIS/x=1:`ne_var`:1 exaxis
   LET xxex = x[gx=exaxis]
   LET/TITLE="($ferret_title_0)" xvar = RESHAPE(($($fer_sym)_var), xxex)
ENDIF

! Is it a varible on the E axis of a DSG file?

DEFINE SYMBOL vshape = `($($fer_sym)_var_0),RETURN=shape`
IF `($vshape"0|E>1|*>0)` THEN

! Is there a rowsize variable?
! Is it a Profile or Trajectory dataset?
   GO LAS_setup_dsg
   IF ($rowvar"0|*>1") THEN DEFINE SYMBOL rowvar = rowsize

! Expand trajectory variable into obs axis
   DEFINE SYMBOL vtype = 0
   DEFINE SYMBOL vtype = `xvar,RETURN=dtype`
   DEFINE SYMBOL is_string = ($vtype"0|CHAR>1|*>0")

   IF ($is_string"0|0|*>1") THEN 
      LET/TITLE="($ferret_title_0)" xvar = EXPND_BY_LEN_STR(($ferret_plot_var_0), ($rowvar),`($rowvar)[m=@sum]`)

      IF ($its_prop_plot"0|*>1") THEN
         IF `STRINDEX("($ferret_plot_var_0)", "WOCE") GT 0` THEN 
            SET VAR/NAME = xvar_0 xvar
	    LET/TITLE="($ferret_title_0)" xvar = STRFLOAT(xvar_0) 
	    SET ATT/LIKE=xvar_0 xvar
         ELSE  ! cannot use a string as plot argument
	     LET mvar_0 = _m[ge=($ferret_plot_var_0)]
	     LET/TITLE="($ferret_title_0)" xvar = EXPND_BY_LEN(mvar_0, ($rowvar),`($rowvar)[m=@sum]`)
         ENDIF
      ENDIF
   ELSE
      LET/TITLE="($ferret_title_0)" xvar = EXPND_BY_LEN(($ferret_plot_var_0), ($rowvar),`($rowvar)[m=@sum]`)
   ENDIF
   LET nx_var = `($rowvar)[m=@sum]`
ENDIF

! Initialize the second variable.
! In fact the region and dataset will be the
! same as for var 0 (for now anyway)
! Cancel the dataset so that another application of the
! init script will work.

IF `($data_count"0") GE 2` THEN 

GO LAS_initialize_region 1
!! Variables need not be in same file or url
!!DEFINE SYMBOL data_1_url = ($data_0_url)  ! same data anyway...

IF `($data_1_url"($data_0_url)|($data_0_url)>1|*>0") AND \
($ferret_init_script"0|*>1")` THEN CANCEL DATA ($data_num)

GO LAS_initialize_data 1

IF ($error_status"0|*>1") THEN
  MESSAGE/ERROR **ERROR ($error_string)
  EXIT/PROGRAM
ENDIF


! Here is variable 1 title 
DEFINE SYMBOL ferret_title_1 = ($ferret_plot_title"($data_1_var)")
IF `(STRINDEX("($ferret_title_1%0%)", "Time") GT 0) AND (STRINDEX("($ferret_title_1%0%)", " since ") GT 0)` THEN \
DEFINE SYMBOL variable_1_lab = Time
DEFINE SYMBOL variable_1_lab = ($ferret_title_1)
LET variable_0_lab = STRCAT(data_1_title, data_1_units)
DEFINE SYMBOL ferret_plot_var_1 = ($($fer_sym)_var)

LET/TITLE="($ferret_title_1)" yvar = XSEQUENCE(($($fer_sym)_var)) 
IF ($its_trajectory_corr"0|*>1") THEN LET/TITLE="($ferret_title_1)" yvar = ($($fer_sym)_var_1)

! Initialize 3rd variable, and see if we are going to set strides
IF `($data_count"0") GE 3` THEN 

   ! Initialize the 3rd variable.
   ! In fact the region and dataset will be the
   ! same as for var 0 (for now anyway)
   
   ! Cancel the dataset so that another application of the
   ! init script will work.

   GO LAS_initialize_region 2
   
!! Variables need not be in same file or url
!!   DEFINE SYMBOL data_2_url = ($data_0_url)

   IF `($data_2_url"($data_0_url)|($data_0_url)>1|*>0") AND \
    ($ferret_init_script"0|*>1")` THEN CANCEL DATA ($data_num)

   GO LAS_initialize_data 2
   
   IF ($error_status"0|*>1") THEN
     MESSAGE/ERROR **ERROR ($error_string)
     EXIT/PROGRAM
   ENDIF
ENDIF



! ACM 1/12/2017
! For prop-prop plots, striding would need to be defined for each grid 
! if the variables have different grids (maybe coming from different URLs). 
! Could analyze the axes, see if, without striding, they are in fact
! the same length, and if so apply striding to all grids. This is a rare
! case; not doing this now.
LET nshape = STRLEN ("($vshape)")
IF `($data_count"0") GE 2 AND ($its_prop_plot"0") AND nshape GT 1` THEN 
   SET DATA ($data_0_url)
   SET DATA ($data_1_url)
   IF `($data_count"0") GE 3` THEN SET DATA ($data_2_url)
   DEFINE SYMBOL grid_0 = `($data_0_var)[d=($dset0)],RETURN=grid`
   DEFINE SYMBOL grid_1 = `($data_1_var)[d=($dset1)],RETURN=grid`
   DEFINE SYMBOL same_grid = ($grid_1"0|($grid_0)>1|*>0")
   IF `($data_count"0") GE 3` THEN 
      DEFINE SYMBOL grid_2 = `($data_2_var)[d=($dset2)],RETURN=grid`
      DEFINE SYMBOL same_grid = `($same_grid) AND ($grid_2"0|($grid_0)>1|*>0")`
   ENDIF
   IF `($same_grid"0|0|1") EQ 0 AND (($xstride"0|*>1") + ($ystride"0|*>1") + \
        ($zstride"0|*>1") +($tstride"0|*>1") GT 0) ` THEN 
       MESSAGE/ERROR **ERROR Could not define subsampling for variables on different grids
       EXIT/PROGRAM
   ENDIF
ENDIF



DEFINE SYMBOL vshape = `($($fer_sym)_var_1),return=SHAPE`
IF `STRCMP("($vshape)", "E") EQ 0` THEN 
   LET ne_var = `($($fer_sym)_var),RETURN=msize`
   DEFINE AXIS/x=1:`ne_var`:1 exaxis
   LET xxex = x[gx=exaxis]
   LET/TITLE="($ferret_title_0)" yvar = RESHAPE(($($fer_sym)_var_1), xxex)
ENDIF

! Is it a varible on the E axis of a DSG file?

DEFINE SYMBOL vshape = `($($fer_sym)_var_1),RETURN=shape`
IF `($vshape"0|E>1|*>0)` THEN

! Is it a Profile or Trajectory dataset?
   IF `($rowvar"0|*>1") EQ 0` THEN GO LAS_setup_dsg
   IF ($rowvar"0|*>1") THEN DEFINE SYMBOL rowvar = rowsize

! Expand trajectory variable into obs axis
   DEFINE SYMBOL vtype = 0
   DEFINE SYMBOL vtype = `yvar,RETURN=dtype`
   DEFINE SYMBOL is_string = ($vtype"0|CHAR>1|*>0")

   IF ($is_string"0|0|*>1") THEN 
      LET yvar = EXPND_BY_LEN_STR(($ferret_plot_var_1), ($rowvar),`($rowvar)[m=@sum]`)

      IF ($its_prop_plot"0|*>1") THEN
         IF `STRINDEX("($ferret_plot_var_1)", "WOCE") GT 0` THEN 
            SET VAR/NAME = yvar_0 yvar
	    LET/TITLE="($ferret_title_1)" yvar = STRFLOAT(yvar_0) 
	    SET ATT/LIKE=yvar_0 yvar
         ELSE  ! cannot use a string as plot argument
	     LET mvar_1 = _m[ge=($ferret_plot_var_1)]
	     LET/TITLE="($ferret_title_1)" yvar = EXPND_BY_LEN(mvar_1, ($rowvar),`($rowvar)[m=@sum]`)
         ENDIF
      ENDIF

   ELSE
      LET/TITLE="($ferret_title_1)" yvar = EXPND_BY_LEN(($ferret_plot_var_1), ($rowvar),`($rowvar)[m=@sum]`)
   ENDIF
ENDIF

IF ($its_prop_plot"0|*>1") THEN

   DEFINE SYMBOL vtype = 0
   LET gettype = ($ferret_plot_var_0_small%($ferret_plot_var_0)%)
   DEFINE SYMBOL vtype = `gettype,RETURN=dtype`
   DEFINE SYMBOL is_string = ($vtype"0|CHAR>1|*>0")
   IF ($is_string"0|0|*>1") THEN 
      IF `STRINDEX("($ferret_plot_var_0)", "WOCE") GT 0` THEN 
         SET VAR/NAME=($ferret_plot_var_0)_00 ($ferret_plot_var_0)
         LET ($ferret_plot_var_0) = STRFLOAT(($ferret_plot_var_0)_00 )
         LET/TITLE="($ferret_title_0)" xvar = plot_var_0
      ENDIF
      IF `STRINDEX("($ferret_plot_var_0)", "tmonth") GT 0` THEN 
         LET month_labels = {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"}
         LET plot_var_0 =  element_index_str_n( ($ferret_plot_var_0), month_labels) 
	    DEFINE SYMBOL ferret_plot_var_0 = plot_var_0
	    LET/TITLE="($ferret_title_0)" xvar = plot_var_0
	 ENDIF
   ENDIF

   
   DEFINE SYMBOL vtype = 0
   LET gettype = ($ferret_plot_var_1)
   LET gettype = ($ferret_plot_var_1_small%($ferret_plot_var_1)%)
   DEFINE SYMBOL vtype = `gettype,RETURN=dtype`
   DEFINE SYMBOL is_string = ($vtype"0|CHAR>1|*>0")
   IF ($is_string"0|0|*>1") THEN 
      IF `STRINDEX("($ferret_plot_var_1)", "WOCE") GT 0` THEN 
         SET VAR/NAME=($ferret_plot_var_1)_00 ($ferret_plot_var_1)
         LET ($ferret_plot_var_1) = STRFLOAT(($ferret_plot_var_1)_00 )
	    LET/TITLE="($ferret_title_1)" yvar = ($ferret_plot_var_1)
      ENDIF
      IF `STRINDEX("($ferret_plot_var_1)", "tmonth") GT 0` THEN 
         LET month_labels = {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"}
         LET plot_var_1 =  element_index_str_n( ($ferret_plot_var_1), month_labels) 
	    DEFINE SYMBOL ferret_plot_var_1 = plot_var_1
	    LET/TITLE="($ferret_title_1)" yvar = plot_var_1
	 ENDIF
   ENDIF
   DEFINE SYMBOL data_x_var  = xvar
   DEFINE SYMBOL data_y_var = yvar
ENDIF

ENDIF   ! data_count ge 2


IF `($data_count"0") GE 3` THEN ! color by 3rd variable

   ! Initialized the 3rd variable above, but do it again to set names up
   ! In fact the region and dataset will be the
   ! same as for var 0 (for now anyway)
   
   ! Cancel the dataset so that another application of the
   ! init script will work.

   GO LAS_initialize_region 2
   
!! Variables need not be in same file or url
!!   DEFINE SYMBOL data_2_url = ($data_0_url)

   IF `($data_2_url"($data_0_url)|($data_0_url)>1|*>0") AND \
    ($ferret_init_script"0|*>1")` THEN CANCEL DATA ($data_num)

   GO LAS_initialize_data 2
   
   IF ($error_status"0|*>1") THEN
     MESSAGE/ERROR **ERROR ($error_string)
     EXIT/PROGRAM
   ENDIF
   
   ! Here is variable 2 title 
   DEFINE SYMBOL ferret_title_2 = ($ferret_plot_title"($data_2_var)")
   DEFINE SYMBOL ferret_plot_var_2 = ($($fer_sym)_var)
   DEFINE SYMBOL ferret_plot_var = ($($fer_sym)_var)

   LET/TITLE="($ferret_title_2)" zvar = XSEQUENCE(($ferret_plot_var_2))

! Is it a varible on the E axis of a DSG file?

   DEFINE SYMBOL vshape = `($ferret_plot_var_2),RETURN=shape`
   IF `($vshape"0|E>1|*>0)` THEN

! Is it a Profile or Trajectory dataset?
      IF `($rowvar"0|*>1") EQ 0` THEN GO LAS_setup_dsg
      IF ($rowvar"0|*>1") THEN DEFINE SYMBOL rowvar = rowsize

! Expand trajectory variable into obs axis
      DEFINE SYMBOL vtype = 0
      DEFINE SYMBOL vtype = `zvar,RETURN=dtype`
      DEFINE SYMBOL is_string = ($vtype"0|CHAR>1|*>0")

      IF ($is_string"0|0|*>1") THEN 
         LET zvar = EXPND_BY_LEN_STR(($ferret_plot_var_2), ($rowvar),`($rowvar)[m=@sum]`)

! Set string var to a sequence number, unless its a qc_flag or region id.

	 IF `(($data_2_var_in"0|region_ID>1|qc_flag>1|*>0") EQ 0) AND ($its_prop_plot"0|*>1")` THEN 
	    LET mvar_2 = _m[ge=($ferret_plot_var_2)]
	    LET zvar = EXPND_BY_LEN(mvar_2, ($rowvar),`($rowvar)[m=@sum]`)
	 ELSE
	    LET zvar = EXPND_BY_LEN(($ferret_plot_var_2), ($rowvar),`($rowvar)[m=@sum]`)
	 ENDIF
      ELSE
         LET zvar = EXPND_BY_LEN(($ferret_plot_var_2), ($rowvar),`($rowvar)[m=@sum]`)
      ENDIF

   ELSE

! Check the data type of other color-by variables.

      LET gettype = ($ferret_plot_var_2_small%($ferret_plot_var_2)%)
      DEFINE SYMBOL vtype = `gettype,RETURN=dtype`
      DEFINE SYMBOL is_string = ($vtype"0|CHAR>1|*>0")

! If string, set to all-missing. (But custom scripts may do more later, e.g. for SOCAT)
      IF `($is_string) AND ($its_listing"0|*>1") EQ 0` THEN
         DEFINE SYMBOL zvar_is_string = 1  
         LET zvar = 1./0 + 0*xvar
         DEFINE SYMBOL note_num = `($note_num"0") + 1`
         DEFINE SYMBOL note_($note_num)_lab = ($data_2_title) is not numeric. Plot without color.
         CANCEL SYMBOL ferret_plot_var
     ENDIF

   ENDIF
   ! what about woce flags??

   DEFINE SYMBOL zvar = zvar
   DEFINE SYMBOL color_by = 1

   IF ($ferret_($data_2_var)_palette"0|*>1") THEN \
    DEFINE SYMBOL ferret_palette = ($ferret_($data_2_var)_palette)

   IF ($ferret_($data_2_var)_fill_levels"0|*>1") THEN \
    DEFINE SYMBOL color_by_levels = ($ferret_($data_2_var)_fill_levels)

ENDIF

IF `($data_count"0") GE 4` THEN ! 4th variable, for table listings

   REPEAT/RANGE=3:`($data_count)-1`/NAME=c (\
      DEFINE SYMBOL list_var = `c`; \
      GO LAS_initialize_extra_var \
      )
ENDIF


IF `($vshape"0|E>0|*>1)` THEN
LET nx_var = `($($fer_sym)_var_0),return=isize`
LET ny_var = `($($fer_sym)_var_0),return=jsize`
LET nz_var = `($($fer_sym)_var_0),return=ksize`
LET nt_var = `($($fer_sym)_var_0),return=lsize`
LET ne_var = `($($fer_sym)_var_0),return=msize`
LET nf_var = `($($fer_sym)_var_0),return=nsize`

LET nx_var = `nx_var*ny_var*nz_var*nt_var*ne_var*nf_var`

ENDIF


IF ($custom_dataset"0|*>1") THEN 
    IF `($ferret_is_($custom_dataset)"0|*>1") AND ($custom_setup_vars"0|*>1")` THEN \
     GO ($custom_setup_vars)
ENDIF

! Define the label with title and units to be used in the annotations.
can sym variable_lab
IF `STRINDEX("($variable_lab%0%)", "vs") EQ 0` THEN 
   DEFINE SYMBOL variable_lab = ($variable_1_lab) vs ($variable_0_lab)
   LET variable_0_lab = STRCAT(data_0_title, data_0_units)
   LET variable_1_lab = STRCAT(data_1_title, data_1_units)
   LET variable_lab_A = STRCAT(variable_1_lab, " vs ")
   LET variable_lab_B = STRCAT(variable_lab_A, variable_0_lab)
   LET variable_lab = STRCAT(variable_lab_A, variable_0_lab)
   DEFINE SYMBOL variable_lab_var = 1
ENDIF

IF  ($color_by"0") THEN 
   IF ($data_2_var"0|time>1|*>0") THEN  DEFINE SYMBOL ferret_plot_key = date_key 

   IF `STRINDEX("($variable_lab%0%)", "colored") EQ 0` THEN 
      LET variable_2_lab = STRCAT(data_2_title, data_2_units)
      DEFINE SYMBOL variable_lab = ($variable_lab) colored by ($ferret_title_2)
      DEFINE SYMBOL variable_lab_var = 1
      LET variable_lab_C = STRCAT (variable_lab_B, " colored by ")
      LET variable_lab = STRCAT (variable_lab_C, variable_2_lab)
   ENDIF
ENDIF

! Special color-by-time key
IF `($its_listing"0|1|*>0") EQ 0 AND ($ferret_plot_key"0|date_key>1|*>0")` THEN 

! In this case we set up a time axis, and label the color key with dates
! If the units are seconds since, we don't need that much resolution for this. Make it hours.

   IF `($color_vnum"-1") LT 0` THEN DEFINE SYMBOL color_vnum = 0
   LET tmin = ($ferret_plot_var_($color_vnum))[i=@MIN]
   LET tmax = ($ferret_plot_var_($color_vnum))[i=@MAX]

   LET since_loc = STRINDEX("`($ferret_plot_var_($color_vnum)).units`","since") - 2
   IF `since_loc GT 1` THEN 
      LET tunits = SUBSTRING("`($ferret_plot_var_($color_vnum)).units`",1,`since_loc`)
      DEFINE SYMBOL tunits = `tunits`
   ENDIF
   DEFINE AXIS/T=`tmin`:`tmax`:1/T0="`($ferret_plot_var_($color_vnum)).time_origin`"/units=($tunits) time_axis 
   IF ($tunits"0|seconds>1|*>0") THEN \
   DEFINE AXIS/T=`tmin`:`tmax`:3600/T0="`($ferret_plot_var_($color_vnum)).time_origin`"/units=($tunits) time_axis 
   DEFINE SYMBOL datekey = 1

   DEFINE SYMBOL ferret_key_annotate = 0

   LET ttvar = t[gt=time_axis]
   DEFINE SYMBOL datekey_time_arg = ttvar

   DEFINE SYMBOL ferret_plot_levels = 30
   DEFINE SYMBOL ferret_fill_levels = 30

ENDIF


DEFINE SYMBOL xvar = xvar
DEFINE SYMBOL yvar = yvar

! Apply any constraints

 LET npts = `xvar,return=isize`
! Initialize mask variables

LET var_mask = 1+0*x[gx=xvar,i=1:`nx_var`]

IF `($subset_mask"0|*>1") EQ 0` THEN LET subset_mask = {1}
LET text_mask = {1}
LET ntext_masks = 0

IF ($constraint_0_lhs"0|*>1) THEN
   GO prop_prop_constraints
ENDIF

LET constraints_mask = text_mask * var_mask
IF ($have_feature_mask"0|*>1") THEN LET constraints_mask = text_mask * var_mask * feature_mask_obs

IF ($color_by"0|*>1") THEN 

   DEFINE SYMBOL zvar = constraints_mask*zvar
   DEFINE SYMBOL color_by_title = `zvar,RETURN=title`

   DEFINE SYMBOL plot_arg = ($xvar), ($yvar), ($zvar)

ENDIF  ! color-by 3rd var

DEFINE SYMBOL xvar = constraints_mask*xvar
DEFINE SYMBOL yvar = constraints_mask*yvar


! Set up annotations for the space-time region if this is a correletion plot
! from gridded variables. Do PLOT/SET to get Ferret's formatted version 
! of the region info.


DEFINE SYMBOL apply_region = 0
IF ($shape0"0|*>1") THEN 
   IF `STRLEN("($shape0)") GT 1` THEN DEFINE SYMBOL apply_region = 1
ENDIF


IF ($apply_region) THEN

! Get the upper-left labels that Ferret would draw for a line or 2-D plot

   LET ndim = `STRLEN("($vshape)")`
   IF `NDIM LE 2` THEN
      IF `ndim EQ 2` THEN SHADE/SET ($($fer_sym)_var)
      IF `ndim EQ 1` THEN PLOT/SET ($($fer_sym)_var)

      IF ($labnum_x"0|*>1") THEN DEFINE SYMBOL longitude_lab = ($lab($labnum_x))
      IF ($labnum_y"0|*>1") THEN DEFINE SYMBOL latitude_lab = ($lab($labnum_y))
      IF ($labnum_z"0|*>1") THEN DEFINE SYMBOL depth_lab = ($lab($labnum_z))
      IF ($labnum_t"0|*>1") THEN DEFINE SYMBOL time_lab = ($lab($labnum_t))
   ENDIF

! Now the labels that would be on the axes of a 1-D or 2-D plot, plus 
! region info for 3rd and 4th dimensions.

   DEFINE SYMBOL xlabel = LONGITUDE
   DEFINE SYMBOL ylabel = LATITUDE
   DEFINE SYMBOL zlabel = DEPTH
   DEFINE SYMBOL tlabel = TIME
  
   LET ndim = `STRLEN("($shape0)")`
   DEFINE SYMBOL dim1 = `SUBSTRING ("($shape0)",1,1)`
   IF `ndim GE 2` THEN DEFINE SYMBOL dim2 = `SUBSTRING ("($shape0)",2,1)`
   IF `ndim GE 3` THEN DEFINE SYMBOL dim3 = `SUBSTRING ("($shape0)",3,1)`
   IF `ndim GE 4` THEN DEFINE SYMBOL dim3 = `SUBSTRING ("($shape0)",4,1)`

   REPEAT/RANGE=1:`ndim`/NAME=idim (\
   DEFINE SYMBOL idim = `idim`;\
   GO setup_pp_region_annotations)

ENDIF

! End of  ------------- setup_prop_prop.jnl--------------------------
