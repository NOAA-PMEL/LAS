!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! $Header$
! feature_initialize_vars.jnl
!
! Define variables and symbols based on feature identification variables
! in a DSG dataset
!
! feature_ID     -- unique identifier for each trajectory or profile

!acm 2/2009 Additions to the symbol definitions at the end to
!           allow for null strings: replace these with "none"

! Cancel the XY region.   These limits have nothing to do with the 
! I and J axes of the intermediate data file.

IF `($ferret_memory"25.6") LT 200` THEN SET MEM/siz=200

! Create the 'feature_evnt' variable which increments for each new 
! trajectory or profile.

! NOTE:  The calculation of individual trajectories or profiles only works if the 
! NOTE:  intermediate netCDF files is ordered by feature_ID.  Make sure that
! NOTE:  the SQL query (dsg request?) ends with:  'ORDER BY feature_ID'.

DEFINE SYMBOL feature_max_labels = 200
DEFINE SYMBOL numobs = `($data_var),return = isize`
LET num_e = `($data_var),return = msize`

IF `num_e GT ($numobs)` THEN DEFINE SYMBOL numobs = `num_e`

LET attnames = ($data_var).attnames
IF `IS_ELEMENT_OF_STR_N(attnames, "positive") GT 0` THEN 
   DEFINE SYMBOL pos = `($data_var).positive`
   IF ($pos"0|down>1|*>0") THEN DEFINE SYMBOL plot_pos_down = 1
ENDIF

! Are the rowsize variables in the E direction?
DEFINE SYMBOL rdir = `($rowvar),RETURN=shape` 
DEFINE SYMBOL rind = ($rdir"|X>I|E>M|POINT>M")

LET n_subset = `($rowvar),RETURN=msize`
DEFINE AXIS/X=1:`n_subset`:1 xmask_axis

IF `($numobs) EQ 1` THEN
   LET nfeatures = 1
   DEFINE SYMBOL feature_max = 1
   
   LET feature_numbers = i[gx=xmask_axis]
   LET feature_mask = 1 + 0*feature_numbers

   LET longest = 1
   LET ccarg = XSEQUENCE(($data_var))
   LET data_var_c =  EXPNDI_BY_Z_COUNTS(ccarg, XSEQUENCE(($rowvar)),`longest`)

   LET feature_n = x[i=1:1]
   LET subset_mask = x[i=1:1]

   LET feature_mask_obs = 1 
   DEFINE SYMBOL have_feature_mask = 1
   DEFINE SYMBOL have_feature_nums = 1

ELSE

! Create ID's feature_numbers = i on obs axis.

   LET nfeatures = 1
   IF `($rind"0|I>1|*>0")` THEN LET nfeatures = `($rowvar),RETURN=isize`
   IF `($rind"0|M>1|*>0")` THEN LET nfeatures = `($rowvar),RETURN=msize`
   LET feature_numbers = i[gx=xmask_axis]
   IF `($subset_mask"0|*>1") EQ 0` THEN LET feature_mask = 1 + 0*feature_numbers  ! may redefine later

! Scramble the IDs if we are coloring by ID, scramble them so cruises nearby in the alphabet
! more likely to get different colors.  Create a 2D variable, reshape to it, then unravel
! that back out.

   DEFINE SYMBOL vshape = `($data_var),RETURN=shape`
   LET color_by_index = `($vshape"0|E>1|*>0)`
   LET color_by_feature = `STRCMP("($data_var)", "($feature_variable)") EQ 0`

   IF `color_by_feature EQ 1  OR  color_by_index EQ 1` THEN

      LET color_by_feature = 1
      LET feature_numbers = _m[ge=($rowvar)]

   ! scramble

      define symbol factor = 0
      let nf = nfeatures
   
      repeat/range=2:15/name=fac (if `mod(nf,fac) eq 0` THEN DEFINE SYMBOL factor = `fac`)
      let factor = 3
      IF `($factor"0") eq 0` then
         let nf = `nf + 1`
         repeat/range=2:15/name=fac (if `mod(nf,fac) eq 0` THEN DEFINE SYMBOL factor = `fac`)
      ENDIF
      IF `($factor"0") gt 2` THEN
   
         LET feature_numbers1 = _m[ge=($rowvar)]
         let yfac = ($factor)
         let xfac =  INT(nfeatures/yfac)
         IF `xfac*yfac LT nfeatures` THEN LET xfac = `xfac+1`
         DEFINE AXIS/x=1:`xfac`:1 xfaxis
         DEFINE AXIS/y=1:`yfac`:1 yfaxis
         LET xyvar = x[gx=xfaxis]+y[gy=yfaxis]

         LET var2d = RESHAPE(feature_numbers1, xyvar)
         LET feature_numbers2 = ESEQUENCE(TRANSPOSE_XY (var2d) )
         LET feature_numbers = feature_numbers2[ge=feature_numbers1]

      ENDIF

      DEFINE SYMBOL have_feature_nums = 1
! Large number of color levels, but not larger than # of features.

      IF ($ferret_fill_levels"1|*>0") THEN 
         DEFINE SYMBOL ferret_fill_levels = 55
         IF `nfeatures LT 55` THEN DEFINE SYMBOL ferret_fill_levels = `nfeatures`
         IF `nfeatures LT 30` THEN DEFINE SYMBOL ferret_fill_levels = (1,`nfeatures+1`,1)
      ENDIF

   ENDIF ! feature var is the plot var

   DEFINE SYMBOL feature_max = `nfeatures`
   LET longest = ($rowvar)[($rind)=@max]+2

   LET ccarg = XSEQUENCE(($data_var))
   LET data_var_c =  EXPNDI_BY_Z_COUNTS(ccarg, xsequence(($rowvar)),`longest`)

! If  a subset of feature ids is given then plot only those on a Prop/Prop 
! plot, but using the symbols and colors as determined by the whole dataset.

! Format the feature list and define the mask. 
   GO feature_list_mask
ENDIF

!---------------- end of feature_initialize_vars.jnl -------------------------
