! LAS_get_coords_att.jnl
! If there are no curvilinear coordinates properties for the variable,
! then check for a coordinates attribute. If one exits, check the 
! coordinates listed for 2D coordinates having units of degrees 
! longitude or latitude, and set the properties accordingly

! Fixing ticket 1732 and related issues: if there are coordinates
! attributes, use them.


! If the configuration has the properties already, use those.

IF ($ferret_curvi_coord_lon"0|*>1") THEN EXIT/SCRIPT
IF ($ferret_curvi_coord_lat"0|*>1") THEN EXIT/SCRIPT

! Get the coordinates attribute for a variable. IF it exists
! then parse it up and see if there are 2D lon and lat coordinate
! variables in the dataset.  IF so, use them.


LET allvars = ..varnames
LET varatts = ($data_orig_var).attnames

! Check for a coordinates attribute.
LET has_coord = IS_ELEMENT_OF_STR(varatts, "coordinates")
IF `has_coord EQ 0` THEN exit/script

LET varcoords = "`($data_orig_var).coordinates`"

! Get first coordinate variable.
! The CF standard has coordinates separated by spaces.
! Some coordinates attributes have commas or space-and-comma.


! Turn comma, comma-space or two-spaces into single spaces.

   DEFINE SYMBOL newstring = `varcoords`
   REPEAT/RANGE=1:6 (\
   LEt varcoords = "($newstring)";\
   LET loca = STRINDEX(varcoords, ",");\
   IF `loca EQ 0` THEN EXIT/LOOP;\
   LET len = STRLEN(varcoords);\
   DEFINE SYMBOL str1 = `SUBSTRING(varcoords, 1, loca-1)`;\
   DEFINE SYMBOL str1 = ($str1) `substring(varcoords, loca+1, len)`;\
   DEFINE SYMBOL newstring = ($str1))

   DEFINE SYMBOL newstring = `varcoords`
   REPEAT/RANGE=1:6 (\
   LEt varcoords = "($newstring)";\
   LET loca = STRINDEX(varcoords, "  ");\
   IF `loca EQ 0` THEN EXIT/LOOP;\
   LET len = STRLEN(varcoords);\
   DEFINE SYMBOL str1 = `SUBSTRING(varcoords, 1, loca-1)`;\
   DEFINE SYMBOL str1 = ($str1) `substring(varcoords, loca+2, len)`;\
   DEFINE SYMBOL newstring = ($str1))

! If there is a space at the end, remove it
DEFINE SYMBOL coordstring = `varcoords`
LET space = STRINDEX(varcoords, " ")
IF `space GT 0` THEN 
   LET coordstring = "`SUBSTRING(varcoords, 1, space-1)`"
   DEFINE SYMBOL coordstring = `coordstring`
ENDIF

! Is it a variable (and not a dimension) of the datset?

LET isvar = IS_ELEMENT_OF_STR (allvars, "($coordstring)")

list isvar
IF `isvar NE 0` THEN

! Is it 2D?  IF so does it have longitude or latitude units?

   LET pseudo_names = {\
"'i'", "'j'", "'k'", "'l'", "'x'", "'y'", "'z'", "'t'", "'xbox'", "'ybox'", "'zbox'", "'tbox'", \
"'xboxlo'", "'yboxlo'", "'zboxlo'", "'tboxlo'", "'xboxhi'", "'yboxhi'", "'zboxhi'", "'tboxhi'",  \
"'I'", "'J'", "'K'", "'L'", "'X'", "'Y'", "'Z'", "'T'", "'XBOX'", "'YBOX'", "'ZBOX'", "'TBOX'", \
"'XBOXLO'", "'YBOXLO'", "'ZBOXLO'", "'TBOXLO'", "'XBOXHI'", "'YBOXHI'", "'ZBOXHI'", "'TBOXHI'"}

   let is_p = IS_ELEMENT_OF_STR("'($coordstring)'",pseudo_names)
   list is_p
   IF `is_p GT 0`  THEN
      DEFINE SYMBOL coordstring = `UPCASE("($coordstring)")`
      SET VAR/NAME=($coordstring)_1 '($coordstring)'
      DEFINE SYMBOL coordstring ($coordstring)_1
   ENDIF

   DEFINE SYMBOL cshape = `($coordstring),RETURN=shape`
   IF `STRCMP("($cshape)", "XY") EQ 0` THEN 
      LET cunits = DNCASE("`($coordstring).units`")
      IF `STRINDEX(cunits, "degree_e") GT 0` THEN DEFINE SYMBOL ferret_curvi_coord_lon = ($coordstring)
      IF `STRINDEX(cunits, "degrees_e") GT 0` THEN DEFINE SYMBOL ferret_curvi_coord_lon = ($coordstring)
      IF `STRINDEX(cunits, "degree_n") GT 0` THEN DEFINE SYMBOL ferret_curvi_coord_lat = ($coordstring)
      IF `STRINDEX(cunits, "degrees_n") GT 0` THEN DEFINE SYMBOL ferret_curvi_coord_lat = ($coordstring)
   ENDIF
ENDIF  ! isvar

! Get next coordinate variable

LET remainder = SUBSTRING(varcoords, `space+1`, `STRLEN(varcoords)`)
DEFINE SYMBOL remainder = `remainder`

! There may be 5 or 6 coordinates. Look at all of them.
LET coords_done = 0
REPEAT/RANGE=1:15 (GO get_next_coord; IF `coords_done EQ 1` THEN EXIT/LOOP)

! Did we find just one curvilinear coordinate variable?  That wont work.
IF `(($ferret_curvi_coord_lon"0|*>1") + ($ferret_curvi_coord_lat"0|*>1")) EQ 1` THEN
  MESSAGE/ERROR **ERROR detecting coordinates for ($data_var). Need two horizontal coordinates.
  MESSAGE/ERROR **Only one longitude/latitude coordinate found: ($ferret_curvi_coord_lon)($ferret_curvi_coord_lat). 
  EXIT/PROGRAM
ENDIF

! ----- End of LAS_get_coords_att.jnl ------------------------------------------------

