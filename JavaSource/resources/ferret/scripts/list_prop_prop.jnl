!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! list_prop_prop.jnl
! 
! Author: ansley
! Date: 08-2013

! lists prop_prop_plot.jnl creates an ascii listing of the data from a 
! property-property plot, using the data variable in symbol ferret_plot_var_0,
! the second variable from ferret_plot_var_1 and optionally colored by ferret_plot_var_2.
! If there is a ferret_plot_var_3 list that as well (e.g. two qc flags)
!
! If the variables are strings, use SAMPLEI to apply any masks.
! Use the original variable name when expanding a feature_variable to list.

! 12/2016 set list precision to 7
!  9/2017 If there is a fourth variable, list it too.
! 10/2017 Ensure that Time, Longitude, Latitude, Depth are written if available.
! 10/2017 List up to the total number of variables in the dataset data_0_var through data_xx_var.

set mode verify:always

DEFINE SYMBOL frmt width=1024/norow

IF ($ferret_data_format"0|csv>1|tsv>1|asc>1|*>0") THEN 
   DEFINE SYMBOL frmt = ($frmt)/($ferret_data_format"|tsv>format=tab|csv>format=comma|asc>heading=enhanced")
ENDIF

SET LIST/FILE="($result_ferret_listing_filename)"
SET LIST/PREC=7

DEFINE SYMBOL its_listing = 1

! How many variables to list?
SET DATA ($data_0_url)
LET nvars = ..nvars
REPEAT/i=2:`nvars` (\
  DEFINE SYMBOL ii = `i`;\
  IF ($data_($ii)_var"0|*>1") THEN DEFINE SYMBOL data_count = `($ii)+1` ELSE EXIT/LOOP )

CANCEL DATA `($data_0_var),RETURN=dsetnum`


GO setup_prop_prop

IF ($ferret_plot_var_2"0|($feature_variable"A")|*>0") THEN CANCEL SYMBOL ferret_plot_var_2

! If the color-by variable is a duplicate of either variable 0 or 1, no need to list it.

IF ($ferret_plot_var_2"0|($ferret_plot_var_0)>1|($ferret_plot_var_1)>1|*>0") THEN \
 CANCEL SYMBOL ferret_plot_var_2

! For that matter, if variable 0 matches variable 1, we can skip one of them.

IF ($ferret_plot_var_1"0|($ferret_plot_var_0)>1|*>0") THEN \
 CANCEL SYMBOL ferret_plot_var_1

IF `($ferret_plot_var_1"0|*>1") EQ 0` THEN LET yvar = xvar

! The variables must be the same size. Check and set up a nice message if not.

LET xsize = `xvar,RETURN=isize`
LET ysize = `yvar,RETURN=isize`

IF `xsize NE ysize` THEN 
  MESSAGE/ERROR **ERROR The variables must have the same dimensions: ($ferret_plot_var_0), ($ferret_plot_var_1)
  EXIT/PROGRAM
ENDIF

DEFINE SYMBOL timevar = time
IF ($time_done"0|*>1") THEN DEFINE SYMBOL timevar = time_

! Apply any constraints

LET var_mask = 1+0*($timevar)
LET text_mask = {1}
LET ntext_masks = 0

IF ($constraint_0_lhs"0|*>1) THEN
   GO prop_prop_constraints
ENDIF


LET feature_mask_obs = EXPND_BY_LEN(feature_mask,($rowvar),`($rowvar)[m=@sum]`)
DEFINE SYMBOL have_feature_mask = 1

LET constraints_mask = var_mask* text_mask* feature_mask_obs


! Set up to list the trajectory variable with the metadata


IF ($feature_variable"0|*>1") THEN

   LET gettype = ($feature_variable)
   DEFINE SYMBOL trajtype = `gettype,RETURN=dtype`
   IF ($trajtype"0|CHAR>1|*>0") THEN DEFINE SYMBOL is_string = 1

   DEFINE SYMBOL trajshape = `($feature_variable),RETURN=shape`
   IF `($trajshape"0|E>1|POINT>1|*>0)` THEN

         ! Expand all strings into obs axis
         IF ($is_string"0|*>1") THEN 
	    LET ($feature_variable)_xpnd = EXPND_BY_LEN_STR(($feature_variable), ($rowvar), `($rowvar)[m=@sum]`)
	    
	    LET ii = i[g=($timevar)]
	    LET iindices = IF constraints_mask THEN ii
	    LET compress_mask = COMPRESSI(iindices)
	    LET nok = `compress_mask[i=@ngd]`
	    IF `STRINDEX("($feature_variable_in)", "'") EQ 1` THEN 
	       GO LAS_unquote_string feature_variable_in
	       DEFINE SYMBOL feature_variable_in = feature_variable_in1
	    ENDIF

	    LET/TITLE="($feature_variable_in)"  ($feature_variable_in) = SAMPLEI (($feature_variable)_xpnd, compress_mask[i=1:`nok`])

	 ELSE
	    LET traj_obs = EXPND_BY_LEN(($feature_variable), ($rowvar), `($rowvar)[m=@sum]`)
	    IF `STRINDEX("($feature_variable_in)", "'") EQ 1` THEN 
               GO LAS_unquote_string feature_variable_in
	       DEFINE SYMBOL feature_variable_in = feature_variable_in1
	    ENDIF
            LET/TITLE="($feature_variable_in)" ($feature_variable_in) = constraints_mask*traj_obs
         ENDIF
   ENDIF

ENDIF

IF ($color_by"0|*>1") THEN 
   DEFINE SYMBOL plot_arg = ($xvar), ($yvar), zvar
   DEFINE SYMBOL ztype = `zvar,RETURN=dtype`
   IF ($ztype"0|CHAR>1|*>0") THEN DEFINE SYMBOL is_string = 1

   LET zsize = `zvar,RETURN=isize`
   IF `zsize NE xsize` THEN

! Is this a DSG file? If so is one of the variables on the sample-dimension (obs) axis
! and the other on the trajectory (or profile) axis?  May need to expand a variable 
! onto the obs axis
! If a variable on the M axis is a string, create a numeric ID variable, index 1,2,3, ...


      DEFINE SYMBOL zshape = `zvar,RETURN=shape`
      IF `($zshape"0|E>1|POINT>1|*>0)` THEN

         ! Expand all strings into obs axis
         IF ($is_string"0|*>1") THEN 
	    LET zvar = EXPND_BY_LEN_STR(zvar, ($rowvar), `($rowvar)[m=@sum]`)
	 ELSE
	    LET zvar = EXPND_BY_LEN(zvar, ($rowvar), `($rowvar)[m=@sum]`)
         ENDIF
      ENDIF
      LET zsize = `zvar,RETURN=isize`

      IF `zsize NE xsize` THEN
         MESSAGE/ERROR **ERROR The variables must have the same dimensions: ($ferret_plot_var_0), ($ferret_plot_var_2)
         EXIT/PROGRAM
      ENDIF
      
      DEFINE SYMBOL zvar = constraints_mask*zvar

   ENDIF
   DEFINE SYMBOL color_by_title = `zvar,RETURN=title`

ENDIF  ! color-by 3rd var

DEFINE SYMBOL xvar = constraints_mask* xvar
DEFINE SYMBOL yvar = constraints_mask* yvar

! Will list the date strings to the accuracy of the time units, or the timelab_res property.

DEFINE SYMBOL t_units_string = `($timevar).units`
LET nsince = `STRINDEX("($t_units_string)", "since")-1`
IF `nsince GT 0` THEN DEFINE SYMBOL tunits = `SUBSTRING("($t_units_string)", 1, nsince)`

IF `($data_0_units"-99|text>-99|*>1") NE -99 AND STRINDEX( UPCASE("($ferret_plot_var_0)"), "TIME") GT 0` THEN \
 DEFINE SYMBOL tunits = ($data_0_units)

DEFINE SYMBOL plot_arg = ($xvar)
IF `($data_count"0") GE 2` THEN DEFINE SYMBOL plot_arg = ($xvar), ($yvar)  ! was ($xvar), ($xvar)  ??

IF ($ferret_plot_var_1"0|*>1") THEN
   IF `STRINDEX( UPCASE("($ferret_plot_var_1)"), "TIME") GT 0` THEN DEFINE SYMBOL tunits = ($data_1_units)
   DEFINE SYMBOL plot_arg = ($xvar), ($yvar)
ENDIF

! set up any constraint labels
GO set_constraint_labels

! apply mask to list variables

LET size = `constraints_mask[i=@ngd]`


LET nlist = 0

! Always list the trajectory id, e.g. cruise_expocode

IF ($feature_variable_in"0|*>1") THEN DEFINE SYMBOL vars_out = ($feature_variable_in)
DEFINE SYMBOl comma = ,

LET has_time = `($timevar),RETURN=isready`
IF `IS_ELEMENT_OF_STR_N(varnames, "($timevar)") GT 0 OR has_time GT 0` THEN

! Make a time axis from the time coordinates and use it to compute the date strings.
! Don't list the time variable itself. Hard to give it enough resolution to be useful.

   LET amin = ($timevar)[i=@MIN]
   LET amax = ($timevar)[i=@MAX]
   DEFINE SYMBOL is_time = 1
   GO LAS_is_range amin amax
   
   DEFINE AXIS/T=`ax_lo`:`ax_hi`:`del_ax`/T0="`($timevar).time_origin`"/UNITS=($tunits) haxis

   LET timesample = COMPRESSI(constraints_mask*($timevar))
   LET/TITLE="Time"/UNITS="`($timevar),RETURN=units`" Times = timesample
   LET/TITLE="Date" Date = TAX_DATESTRING (Times[i=1:`size`], t[gt=haxis],  "($ferret_timelab_res%($tunits)%)")

   LET nlist = 1
   DEFINE SYMBOL vars_out = ($vars_out), Date

ENDIF  ! dates, times

! Define Longitude and Latitude variables at the masked locations
IF `IS_ELEMENT_OF_STR_N(varnames, "($timevar)") GT 0 OR has_time GT 0` THEN

   LET ii = i[g=($timevar)]
   LET iindices = IF constraints_mask THEN ii
   LET compress_mask = COMPRESSI(iindices)
   LET nok = `compress_mask[i=@ngd]`
   LET/TITLE="`longitude_,RETURN=title`"/UNITS="`longitude_,RETURN=units`" Longitude = SAMPLEI (longitude_, compress_mask[i=1:`nok`])
   LET/TITLE="`latitude_,RETURN=title`"/UNITS="`latitude_,RETURN=units`" Latitude = SAMPLEI (latitude_, compress_mask[i=1:`nok`])

   LET nlist = `nlist + 2`
   DEFINE SYMBOL vars_out = ($vars_out), Longitude, Latitude

ENDIF  ! longitude, latitude

! If this is a Feature-type dataset of any type other than a Trajectory dataset, 
! see if there is a Depth variable and list it too.

! Was depth already included in the input variables?

DEFINE SYMBOL have_depth = 0
REPEAT/RANGE=1:($data_count)/name=v (\
DEFINE SYMBOL iv = `v-1`; \
IF ($data_($iv)_var%0|depth>1|*>0%) THEN define symbol have_depth = 1;\
IF ($data_($iv)_var%0|depth_>1|*>0%) THEN define symbol have_depth = 1;\
LET attnames = ($data_($iv)_var).attnames;\
IF `IS_ELEMENT_OF_STR_N(attnames, "depth") GE 1` THEN define symbol have_depth = 1)

LET global_attnames = ..attnames
LET nglobal_atts = ..nattrs
DEFINE SYMBOL feature_type = none
IF `IS_ELEMENT_OF_STR(global_attnames, "featureType") GT 0` THEN DEFINE SYMBOL feature_type = `..featureType`

DEFINE SYMBOL depthvar = depth
IF ($depth_done"0|*>1") THEN DEFINE SYMBOL depthvar = depth_

IF `($feature_type%0|Trajectory>0|none>0|*>1%) AND (($have_depth) EQ 0) AND\
  IS_ELEMENT_OF_STR_N(varnames, "($depthvar)") GE 1` THEN

   LET ii = i[g=($timevar)]
   LET iindices = IF constraints_mask THEN ii
   LET compress_mask = COMPRESSI(iindices)
   LET nok = `compress_mask[i=@ngd]`
   LET/TITLE="`($depthvar),RETURN=title`"/UNITS="`($depthvar),RETURN=units`" Depth = SAMPLEI (($depthvar), compress_mask[i=1:`nok`])

   LET nlist = `nlist + 1`
   DEFINE SYMBOL vars_out = ($vars_out), Depth

ENDIF

! Define variables with titles

IF ($ferret_plot_var_0"0|time_>0|($feature_variable)>0|longitude_>0|latitude_>0|*>1") THEN

   LET gettype = ($ferret_plot_var_0)
   DEFINE SYMBOL vtype = `gettype,RETURN=dtype`
   LET ii = i[g=($timevar)]
   LET iindices = IF constraints_mask THEN ii
   LET compress_mask = COMPRESSI(iindices)
   LET nok = `compress_mask[i=@ngd]`
   IF `STRINDEX("($data_0_var_in)", "'") EQ 1` THEN 
      GO LAS_unquote_string data_0_var_in
      DEFINE SYMBOL data_0_var_in = ($data_0_var_in)1
   ENDIF
   LET/TITLE="($data_0_title)"/UNITS="($data_0_units)" ($data_0_var_in) = SAMPLEI (($ferret_plot_var_0), compress_mask[i=1:`nok`])

! expand metadata variables onto the X axis
   IF ($vtype"0|CHAR>1|*>0") THEN DEFINE SYMBOL is_string = 1
   DEFINE SYMBOL zshape = `($ferret_plot_var_0),RETURN=shape`
   IF `($zshape"0|E>1|POINT>1|*>0)` THEN
      ! Expand all strings into obs axis 
      IF ($is_string"0|*>1") THEN 
         LET ($ferret_plot_var_0)_xpnd = EXPND_BY_LEN_STR(($ferret_plot_var_0), ($rowvar), `($rowvar)[m=@sum]`)
      ELSE
         LET ($ferret_plot_var_0)_xpnd = EXPND_BY_LEN(($ferret_plot_var_0), ($rowvar), `($rowvar)[m=@sum]`)
      ENDIF
      IF `STRINDEX("($data_0_var_in)", "'") EQ 1` THEN 
         GO LAS_unquote_string data_0_var_in
         DEFINE SYMBOL data_0_var_in = ($data_0_var_in)1
      ENDIF
      LET/TITLE="($data_0_title)"/UNITS="($data_0_units)" ($data_0_var_in) = SAMPLEI (($ferret_plot_var_0)_xpnd, compress_mask[i=1:`nok`])
   ENDIF

   LET nlist = `nlist + 1`
   IF `nlist LT 1` THEN LET nlist = 2
   DEFINE SYMBOL vars_out = ($vars_out),  ($data_0_var_in)
ENDIF

IF ($ferret_plot_var_1"0|time_>0|($feature_variable)>0|longitude_>0|latitude_>0|*>1") THEN

   LET gettype = ($ferret_plot_var_1)
   DEFINE SYMBOL vtype = `gettype,RETURN=dtype`
   LET ii = i[g=($timevar)]
   LET iindices = IF constraints_mask THEN ii
   LET compress_mask = COMPRESSI(iindices)
   LET nok = `compress_mask[i=@ngd]`
   IF `STRINDEX("($data_1_var_in)", "'") EQ 1` THEN 
      GO LAS_unquote_string data_1_var_in
      DEFINE SYMBOL data_1_var_in = ($data_1_var_in)1
   ENDIF
   LET/TITLE="($data_1_title)"/UNITS="($data_1_units)" ($data_1_var_in) = SAMPLEI (($ferret_plot_var_1), compress_mask[i=1:`nok`])

   IF ($vtype"0|CHAR>1|*>0") THEN DEFINE SYMBOL is_string = 1

! expand metadata variables onto the X axis
   DEFINE SYMBOL zshape = `($ferret_plot_var_1),RETURN=shape`
   IF `($zshape"0|E>1|*>0)` THEN
      ! Expand all strings into obs axis
      IF ($is_string"0|*>1") THEN 
         LET ($ferret_plot_var_1)_xpnd = EXPND_BY_LEN_STR(($ferret_plot_var_1), ($rowvar), `($rowvar)[m=@sum]`)
      ELSE
         LET ($ferret_plot_var_1)_xpnd = EXPND_BY_LEN(($ferret_plot_var_1), ($rowvar), `($rowvar)[m=@sum]`)
      ENDIF
      IF `STRINDEX("($data_1_var_in)", "'") EQ 1` THEN 
         GO LAS_unquote_string data_1_var_in
         DEFINE SYMBOL data_1_var_in = ($data_1_var_in)1
      ENDIF
      LET/TITLE="($data_1_title)"/UNITS="($data_1_units)" ($data_1_var_in) = SAMPLEI (($ferret_plot_var_1)_xpnd, compress_mask[i=1:`nok`])
   ENDIF

   LET nlist = `nlist + 1`
   DEFINE SYMBOL vars_out = ($vars_out), ($data_1_var_in)
ENDIF

! color-by variable on the prop-prop plot:

IF ($ferret_plot_var_2"0|time_>0|($feature_variable)>0|longitude_>0|latitude_>0|*>1") THEN 
   
   LET gettype = ($ferret_plot_var_2)
   DEFINE SYMBOL vtype = `gettype,RETURN=dtype`
   IF ($vtype"0|CHAR>1|*>0") THEN DEFINE SYMBOL is_string = 1

   LET ii = i[g=($timevar)]
   LET iindices = IF constraints_mask THEN ii
   LET compress_mask = COMPRESSI(iindices)
   LET nok = `compress_mask[i=@ngd]`
   IF `STRINDEX("($data_2_var_in)", "'") EQ 1` THEN 
      GO LAS_unquote_string data_2_var_in
      DEFINE SYMBOL data_2_var_in = ($data_2_var_in)1
   ENDIF
   LET/TITLE="($data_2_title)"/UNITS="($data_2_units)" ($data_2_var_in) = SAMPLEI (zvar, compress_mask[i=1:`nok`])

! expand metadata variables onto the X axis
   DEFINE SYMBOL zshape = `($ferret_plot_var_2),RETURN=shape`
   IF `($zshape"0|E>1|POINT>1|*>0)` THEN
      ! Expand all strings into obs axis
      IF ($is_string"0|*>1") THEN 
         LET ($ferret_plot_var_2)_xpnd = EXPND_BY_LEN_STR(($ferret_plot_var_2), ($rowvar), `($rowvar)[m=@sum]`)
      ELSE
         LET ($ferret_plot_var_2)_xpnd = EXPND_BY_LEN(($ferret_plot_var_2), ($rowvar), `($rowvar)[m=@sum]`)
      ENDIF
      IF `STRINDEX("($data_2_var_in)", "'") EQ 1` THEN 
         GO LAS_unquote_string data_2_var_in
         DEFINE SYMBOL data_2_var_in = ($data_2_var_in)1
      ENDIF
      LET/TITLE="($data_2_title)"/UNITS="($data_2_units)" ($data_2_var_in) = SAMPLEI (($ferret_plot_var_2)_xpnd, compress_mask[i=1:`nok`])
   ENDIF

   LET nlist = `nlist + 1`
   DEFINE SYMBOL vars_out = ($vars_out), ($data_2_var_in)
ENDIF

! Set up to list further variables
IF `($data_count"0") GE 4`  THEN
   REPEAT/RANGE=3:`($data_count)-1`/NAME=c (\
      DEFINE SYMBOL list_var = `c`; \
      GO set_proplist_var)
ENDIF

! Make sure we havent ended the list with a comma.

IF `STRLEN("($vars_out)") EQ STRRINDEX("($vars_out)", ",")` THEN
   LET slen = `STRLEN("($vars_out)") - 1`
   DEFINE SYMBOL vars_out = `SUBSTRING("($vars_out)", 1, slen)`
ENDIF

LIST/NOHEAD/NOROW/FILE/CLOBBER/FORMAT=("Total Number of Records", F10.0) `size`

DEFINE SYMBOL list_quals = APPEND

! Constraint labels

IF `($note_num"0") GT 0` THEN
   REPEAT/RANGE=1:($note_num)/name=q (\
     DEFINE SYMBOL qq = `q`; \
     SAY/OUTFILE="($result_ferret_listing_filename)"/APPEND   ($note_($qq)_lab) )
ENDIF

LET blank = " "
LIST/NOHEAD/NOROW/FILE/APPEND/FORMAT=(A) blank

! the default is set under 1/4 of Ferret's memory allowing for LET definitions 
LET use_size = 1000000*($ferret_memory)/4.
LET max_size = ($MAX_LIST_SIZE"`use_size`")


IF `size* nlist GT max_size` THEN
   IF `($ferret_memory"25.6") LT 300` THEN SET MEM/SIZ=300
   LET use_size = 1000000*($ferret_memory)/4.
ENDIF

IF `size* nlist LE max_size` THEN
! 
! ... list in one big chunk
!
   IF `($ferret_format"0|asc>1|*>0") + ($ferret_format"0|txt>1|*>0") GT 0` THEN  
      IF ($var_history"0|*>1") THEN LIST/($list_quals)/NOHEAD/FORMAT=(A) var_hist
      DEFINE SYMBOL list_quals = APPEND
   ENDIF

   LIST/i=1:`size`/($list_quals)/FILE/($frmt) ($vars_out) 

ELSE
   LET nchunk = INT(size/ max_size)
   IF `nchunk LT 2` THEN LET nchunk = 2
   LET ichunk = INT(size/ nchunk) 
   LET i1 = 1
   LET i2 = `ichunk`
   REPEAT/RANGE=1:`nchunk+1` ( \
     LIST/($list_quals)/FILE/($frmt)/I=`i1`:`i2` ($vars_out); \
     CANC MEM/ALL; \
     DEFINE SYMBOL list_quals = APPEND/NOHEAD; \
     LET i1 = `i2+1`; \
     LET i2 = `i2+ichunk`; \
     IF `i1 GT size` THEN EXIT/LOOP; \
     IF `i2 GT size` then LET i2 = size)

ENDIF

! ----- End of list_prop_prop.jnl ------------------------------------------------
