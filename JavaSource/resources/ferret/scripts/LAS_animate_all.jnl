!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! LAS_animate_all.jnl
!
! Ansley Manke
! 10/22/2018 !
!
! LAS_animate_all.jnl writes a set of frames for an animation.
! The calling script is just like for Data_Extract_Frames.
! Given 
! - dataset, variable specifiers. If two variables, it's assumed to be a vector plot
! - the X-Y-Z-T-E region, with time range in Ferret time format
! - ferret_time_step = 1 to make a plot at each timestep, or > 1 to plot every nth
! - ferret_view xyt, xt, etc (we used to animate line plots, seems to be turned off.)
! - symbol $result_ferret_listing_filename with the directory location to write the frame
!   files and debug output
! - symbol $operation_key, used to make the frame image filenames and file names for debug 
!   output; each frame will also get its own debug output
! - Plot options properties
!
! Compute these - 1st 4 of these can be preset with ferret properties
! - fill_levels      for 2D plots
! - contour_levels   for 2D plots
! - dep_axis_scale   for 1D plots
! - vector_length    for vector plots
!
! - number of frames to produce
! 
! Draw the set of image files, named so that they will sort consecutively
! each image will have its own xxx_debug.txt file.
!
! Write the following to the file ($result_ferret_listing_filename)
!  - the base-name, which is ($operation_key)_plot_image
!  - the number of frames created


! setup for animation image-set generation

DEFINE SYMBOL its_autolev_animate = 1
DEFINE SYMBOL is_animation_frame = 1

! These plots don't have annotations
CANCEL SYMBOL ferret_annotations 

! For setting output image and debug filenames for each frame

IF `($result_plot_image_filename"0|*>1") EQ 0`  THEN 
  LET len = STRRINDEX("($result_ferret_listing_filename)", "/")
  DEFINE SYMBOL pltext = png
  IF ($PROGRAM_NAME"0|Ferret>1|*>0") THEN DEFINE SYMBOL pltext = gif
  DEFINE SYMBOL result_base = `SUBSTRING("($result_ferret_listing_filename)", 1, len)`
  DEFINE SYMBOL result_plot_image_filename = ($result_base)/($operation_key)_plot_image.($pltext)
ENDIF

LET dd = `STRINDEX("($result_plot_image_filename)", ".")`
LET slen = `STRLEN("($result_plot_image_filename)")`
DEFINE SYMBOL result_plot_image_base = `SUBSTRING("($result_plot_image_filename)", 1, dd-1)`
DEFINE SYMBOL image_ext = `SUBSTRING("($result_plot_image_filename)", dd+1, slen)`

LET dd = STRINDEX("($result_debug_filename)", ".")
DEFINE SYMBOL result_debug_filename_base = `SUBSTRING("($result_debug_filename)", 1, dd-1)`

! General LAS setup
GO LAS_initial_setup 0

GO LAS_initialize_region 0
GO LAS_initialize_data 0

IF `($FERRET_MEMORY"25.6") LT 100` THEN SET MEM/SIZ=100

! Here is the variable we will plot, with the region specified including the full T range
DEFINE SYMBOL ferret_list_var = ($ferret_plot_var)

CANCEL MODE long_lab
CANCEL MODE latit_lab

IF ($do_curvi_xy"0") THEN 
   LET the_var = ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]
   IF ($region_zt"0|*>1") THEN \
    LET the_var = ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax),($region_zt)]
   DEFINE SYMBOL imin ($clon_imin)
   DEFINE SYMBOL imax ($clon_imax)
   DEFINE SYMBOL isize `($clon_imax) - ($clon_imin) + 1`
   DEFINE SYMBOL jmin ($clat_jmin)
   DEFINE SYMBOL jmax ($clat_jmax)
   DEFINE SYMBOL jsize `($clat_jmax) - ($clat_jmin) + 1`
ELSE
   LET the_var = ($ferret_plot_var)
   DEFINE SYMBOL imin `the_var,return=xstart`
   DEFINE SYMBOL imax `the_var,return=iend`
   DEFINE SYMBOL isize `the_var,return=isize`
   DEFINE SYMBOL jmin `the_var,return=jstart`
   DEFINE SYMBOL jmax `the_var,return=jend`
   DEFINE SYMBOL jsize `the_var,return=jsize`
ENDIF

DEFINE SYMBOL kmin `the_var,return=kstart`
DEFINE SYMBOL kmax `the_var,return=kend`
DEFINE SYMBOL ksize `the_var,return=ksize`
DEFINE SYMBOL lmin `the_var,return=lstart`
DEFINE SYMBOL lmax `the_var,return=lend`
DEFINE SYMBOL lsize `the_var,return=lsize`


!!!!! for animation of 2D plots

! For vector plots, compute consistent vector length for the 
! animation.

! For color or contour plots, LAS_auto_levels_animate checks whether 
! symbols for color levels have been set, and if not, sets them for 
! the variable at all time steps.

IF `($data_count"1") EQ 2` THEN
   ! Sets symbol ferret_vector_length, if not pre-set
   GO LAS_auto_veclen_animate
   DEFINE SYMBOL LAS_plotting_script = xy_vector_plot
ELSE
   ! Sets symbols ferret_fill_levels and ferret_contour_levels, if not pre-set
   GO LAS_auto_levels_animate 
   DEFINE SYMBOL LAS_plotting_script = xy_plot_2D
ENDIF

!!!!! for animation of 1D plots

DEFINE SYMBOL ndim = STRLEN("($ferret_view)")

!x, xt, y, yt, z, or zt view
IF `(($ndim) EQ 1) OR ( (($ndim) EQ 2) AND (STRINDEX("($ferret_view)", "t") GT 0) )` THEN

! If the user gave dependent axis scaling, 
! remove any surrounding parentheses

 IF ($ferret_dep_axis_scale"0|*>1") THEN

   IF `STRINDEX("($ferret_dep_axis_scale)", "(") GT 0` THEN
      LET paren = `STRINDEX("($ferret_dep_axis_scale)", "(")`
      LET slen = `STRLEN("($ferret_dep_axis_scale)")`
      DEFINE SYMBOL ferret_dep_axis_scale = `SUBSTRING("($ferret_dep_axis_scale)", paren+1, slen-1)`
     
      LET paren = `STRINDEX("($ferret_dep_axis_scale)", ")")`
      LET slen = `STRLEN("($ferret_dep_axis_scale)")`
      DEFINE SYMBOL ferret_dep_axis_scale = `SUBSTRING("($ferret_dep_axis_scale)", 1, slen-1)`
   ENDIF
 ENDIF

! If dependent axis scale was not set by the user, determine a
! consistent scale to use

 IF `($ferret_dep_axis_scale"1|*>0")` THEN
    LOAD the_var
    LET vmin = the_var[x=@min,y=@min,z=@min,t=@min]
    LET vmax = the_var[x=@max,y=@max,z=@max,t=@max]
    PPL %RANGE `vmin,p=9` `vmax,p=9` 10
    DEFINE SYMBOL lo_lim ($PPL$RANGE_LOW)
    DEFINE SYMBOL hi_lim ($PPL$RANGE_HIGH)
    DEFINE SYMBOL delta ($PPL$RANGE_INC)
    DEFINE SYMBOL ferret_dep_axis_scale ($PPL$RANGE_LOW),($PPL$RANGE_HIGH),($PPL$RANGE_INC)
 ENDIF

 DEFINE SYMBOL LAS_plotting_script = line_plot_1D
ENDIF  ! ndim = 1


IF ($do_curvi_xy"0") THEN 
   LET the_var = ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]
   IF ($region_zt"0|*>1") THEN \
    LET the_var = ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax),($region_zt)]
ENDIF 


DEFINE SYMBOL hasT = 1

!-----------------------------------------
! compute time range for animation on XY view 
!-----------------------------------------
!- only a single time point was selected
!- or, there is not time axis at all

! Determine a new time range if just a single point requested
IF ($do_curvi_xy"0") THEN 
   DEFINE SYMBOL nt = `the_var,return=lsize`   ! no. of time points requested
ELSE
   DEFINE SYMBOL nt = `the_var,return=lsize`   ! no. of time points requested
ENDIF

IF `($nt) eq 1` THEN

    LET L0 = `the_var,return=lstart`
  
    IF `L0 EQ 0` THEN
        DEFINE SYMBOL hasT = 0
    ENDIF

    DEFINE SYMBOL lmin `L0`
    DEFINE SYMBOL lmax `L0`

     IF ($region_t"0|*>1") THEN
        !SET REGION/T="`($data_var)[d=($data_num),L=($lmin)],return=TSTART`":"`($data_var)[d=($data_num),L=($lmax)],return=TEND`"
        DEFINE SYMBOL region_t = T="`($data_var)[d=($data_num),L=($lmin)],return=TSTART`":"`($data_var)[d=($data_num),L=($lmax)],return=TEND`"
        DEFINE SYMBOL region_xyzt = ($region_xyz),($region_t)
        DEFINE SYMBOL region_full = ($region_xyzt)
     ELSE
        MESSAGE/ERROR **ERROR  Cannot animate this variable. It has no time variation.
        EXIT/PROGRAM
     ENDIF

     IF ($do_curvi_xy"0") THEN 
        DEFINE SYMBOL ferret_plot_var = ($data_var)[d=($data_num),d=($data_num),($region_full)], xcoord, ycoord
     ELSE
        DEFINE SYMBOL ferret_plot_var = ($data_var)[d=($data_num),d=($data_num),($region_full)]
     ENDIF

ENDIF

IF ($ferret_view"0|xyt>1|*>0") THEN DEFINE SYMBOL ferret_view = xy
IF ($ferret_view"0|xt>1|*>0") THEN DEFINE SYMBOL ferret_view = x
IF ($ferret_view"0|yt>1|*>0") THEN DEFINE SYMBOL ferret_view = y
IF ($ferret_view"0|zt>1|*>0") THEN DEFINE SYMBOL ferret_view = z

! Draw all the frame plots, saving them to result_plot_image_base_0nnn.png files (or .gif)


! Set up to name output files consecutively, pre-padding the count with 0's if needed

DEFINE SYMBOL nt = `INT( 1 + ($nt)/($ferret_time_step"1") )`

LET dig = `STRLEN("($nt)")`
LET zeros = "00000000000000"

LET tvar = t[gt=the_var]

! The setup makes the plot-file name, sets the time step, and 
! cleans up between plots.

LET iplot = 0
REPEAT/RANGE=($lmin):($lmax):($ferret_time_step"1")/name=lstep (\
GO LAS_setup_next_frame;\
GO ($LAS_plotting_script ))

!----------------------------------------
! Put out the base-name and the number of frames to the 
! result_ferret_listing_filename.


SET LIST/FILE="($result_ferret_listing_filename)"

LET xmlhead = "<?xml version='1.0' encoding='UTF-8'?>"
LET len = STRLEN(xmlhead)
list/nohead/clobber/format=(A)/FILE xmlhead

LET framesStart = "<lasAnimation>"
LIST/NOHEAD/FORMAT=(A)/FILE/append framesStart

LET f = "<base_image_name>"
list/nohead/clobber/format=(A)/FILE/append f

LET nlen = strlen ("($operation_key)_plot_image")
LET a = "($operation_key)_plot_image"
list/nohead/clobber/format=(A)/FILE/append a

LET f = "</base_image_name>"
list/nohead/clobber/format=(A)/FILE/append f

LET f = "<number_frames>"
list/nohead/clobber/format=(A)/FILE/append f

LET a = "`iplot`"
list/nohead/clobber/format=(A)/FILE/append a

LET f = "</number_frames>"
list/nohead/clobber/format=(A)/FILE/append f


LET framesEnd = "</lasAnimation>"
list/nohead/format=(A15)/FILE/append framesEnd

! End of file ------------LAS_animate_all.jnl--------------------------
