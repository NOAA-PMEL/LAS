! list_csv_define_var.jnl
! Run this from a loop in list_csv_data.jnl

! Initialize data and define 1-d list of variable to write out
! Save the original variable name and use it in the listing.

DEFINE SYMBOL var_num = $1
GO LAS_initialize_region ($var_num)
DEFINE SYMBOL data_($var_num)_var_orig ($data_($var_num)_var)
GO LAS_initialize_data ($var_num)

LET varnames = ..varnames

! If a variable has already been renamed, in an init script 
! then we need to work around that.

! variable has not been renamed. We can rename it here, and then
! write the output using the original name.

IF `IS_ELEMENT_OF_STR_N(varnames, "($data_($var_num)_var)") NE 0` THEN 
   SET VAR/NAME=($data_($var_num)_var)_in ($data_($var_num)_var)
   DEFINE SYMBOL data_($var_num)_var = ($data_($var_num)_var)_in
   GO LAS_initialize_data ($var_num)

! data_($num)_var was renamed. Use original-name plus an underscore when writing.
ELSE 
   DEFINE SYMBOL data_($var_num)_var_orig = ($data_($num)_var)_
   LET/title="`($data_($num)_var),return=title`"/units="`($data_($num)_var),return=units`" ($data_($var_num)_var)_init = ($data_($num)_var)[($region_full)]
   DEFINE SYMBOL data_($var_num)_var =  ($data_($var_num)_var)_init
   DEFINE SYMBOL ferret_plot_var = ($data_($var_num)_var)
ENDIF

DEFINE SYMBOL ferret_plot_var_($var_num) =($ferret_plot_var)
LET ferret_list_var_($var_num) = XSEQUENCE(($ferret_plot_var))
DEFINE SYMBOL ferret_list_var_($var_num) = ferret_list_var_($var_num)
DEFINE SYMBOL size_($var_num)= `($ferret_list_var_($var_num)),return=isize`
IF `($var_num) GT 0` THEN if `($size_($var_num)) NE ($size_0)` THEN MESSAGE/ERROR ERROR: Variables different sizes
IF `($var_num) GT 0` THEN if `($size_($var_num)) NE ($size_0)` THEN exit/program 

! End of script ---------- list_csv_define_var.jnl----------------------------
