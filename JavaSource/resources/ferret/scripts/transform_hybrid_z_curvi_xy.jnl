! transform_hybrid_z_curvi_xy.jnl
! 
! Set up for Hybrid Z data: Hybrid-Z regridding and 
! curvilinear XY plotting.

!  In the init script, we have already opened the data field dataset, the layer
!  thickness dataset and symbol native_z_plot. Also defined the fixed_z_axis
!  and kmax, kmin to try to optimize the regridding by reducing the amount of 
!  data we need to access for regridding
!
! Coordinate variables for curvilinear-XY native plot.

LET/TITLE="Longitude coordinates"/units=degrees xcoord = ($ferret_curvi_coord_lon)[d=($data_num)]
LET/TITLE="Latitude coordinates"/units=degrees  ycoord = ($ferret_curvi_coord_lat)[d=($data_num)]

GO get_curv_coord_bbox

DEFINE SYMBOL native_Z_plot = 0
IF ($constraint_0_lhs"0|Native_Z_section>1|*>0") THEN \
  DEFINE SYMBOL native_Z_plot ($constraint_0_rhs"0|yes>1|no>0|*>0")

IF ($ferret_thk_url"0|*>1") THEN
   SET DATA "($ferret_thk_url)"

   DEFINE SYMBOL thk_num = `($ferret_thk_var),return=dsetnum`

   IF ($error_status"0|*>1") THEN
     MESSAGE/ERROR "**ERROR Layer Thickness dataset not opened"
     EXIT/PROGRAM
   ENDIF
ENDIF

! NOTE:  Hardcoded depths appropriate only for HYCOM!
IF ($ferret_thk_url"0|*>1") THEN \
DEFINE axis/z/depth/units=`($ferret_thk_var)[d=($thk_num)],return=units`/bounds fixed_z_axis = \ 
     {0.,2., 5, 10.,20.,30.,50.,75.,100.,150.,200.,300.,400.,600.,800.,1000.,1200.,1500.,2000.,3000.,4000.,6000.,8000.},\
     {0.,1.,3.5,7.5,15.,25.,40.,62., 88.,125.,175.,250.,350.,500.,700., 900.,1100.,1350.,1750.,2500.,3500.,5000.,7000.,8000.}


! NOTE:  For Hybrid Z datasets we must open the 'layer thickness' data and
! NOTE:  create ferret_plot_var by using ZAXREPLACE_ZLEV.  The exception is
! NOTE:  when we're doing section plots -- then the user may choose to do a
! NOTE:  3-arg plot to see the native coordinates.

! Interface gives a choice of native Z coordinates only for XZ, YZ (or ZT?) 
! views otherwise use hybrid Z regridding.
! Not native so set up for Hybrid-Z regridding

IF `($native_Z_plot"0") EQ 0` THEN 

   ! NOTE:  Optimization to try to reduce the amount of data we need to access for regridding
   LET kmin = 1
   LET kmax = `z[gz=($ferret_thk_var)[d=($thk_num)]],return=size`
   IF `($region_z_hi"1") eq 0` THEN 
      LET kmax = 1

      ! For surface xy plots, will access just layer 1, not Z=0, so match z region to the data.
      IF ($ferret_curvi_coord_lon"0|*>1") THEN
         IF `($region_0_z_lo) LT z[gz=($data_var)[d=($data_num)],k=1]` THEN \
            DEFINE SYMBOL region_0_z_lo) = `z[gz=($data_var)[d=($data_num)],k=1]`
         IF `($region_0_z_hi) LT z[gz=($data_var)[d=($data_num)],k=1]` THEN \
            DEFINE SYMBOL region_0_z_hi = `z[gz=($data_var)[d=($data_num)],k=1]`
         GO LAS_initialize_region
      ENDIF

   ENDIF

! Set up with just Z and T regions first

   IF `kmax EQ 1` THEN 
      DEFINE SYMBOL ferret_plot_var = ($data_var)[d=($data_num),k=`kmin`:`kmax`]
      IF ($region_t"0|*>1") THEN DEFINE SYMBOL ferret_plot_var = ($data_var)[d=($data_num),($region_t),k=`kmin`:`kmax`]
      DEFINE SYMBOL ferret_plot_title ($data_title) ($data_units)
   ELSE

      DEFINE SYMBOL ferret_plot_var = ZAXREPLACE_ZLEV( \
        ($data_var)[d=($data_num),k=`kmin`:`kmax`], \
        ($ferret_thk_var)[d=($thk_num),k=`kmin`:`kmax`], \
        z[gz=fixed_z_axis,($region_z)] )

      IF ($region_t"0|*>1") THEN DEFINE SYMBOL ferret_plot_var = ZAXREPLACE_ZLEV( \
        ($data_var)[d=($data_num),($region_t),k=`kmin`:`kmax`], \
        ($ferret_thk_var)[d=($thk_num),($region_t),k=`kmin`:`kmax`], \
        z[gz=fixed_z_axis,($region_z)] )

      DEFINE SYMBOL ferret_plot_title ($data_title) ($data_units) Regridded to Fixed-Z Grid
   ENDIF

! Now set up curvilinear xy
!   Native plot in XY

   IF ($ferret_view"|xy>1|*>0") THEN

     IF `($constraint_0_lhs"1|Curv_to_Rect_Regridding>0|*>1")` THEN  ! Do this setup if NOT curv-to-rect regridding
        DEFINE SYMBOL native_curvilinear_xy = 1

!        LET/d=($data_num) plot_var = ($ferret_plot_var)
!       
!       LET/TITLE="Longitude coordinates"/units=degrees xcoord = ($ferret_curvi_coord_lon)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]
!       LET/TITLE="Latitude coordinates"/units=degrees  ycoord = ($ferret_curvi_coord_lat)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]

        LET plot_var = ($ferret_plot_var)
        LET/TITLE="Longitude coordinates"/units=degrees xcoord = ($ferret_curvi_coord_lon)[d=($data_num)]
        LET/TITLE="Latitude coordinates"/units=degrees  ycoord = ($ferret_curvi_coord_lat)[d=($data_num)]

        DEFINE SYMBOL ferret_plot_var plot_var, xcoord, ycoord

        DEFINE SYMBOL ferret_curvi_quals MODULO
        IF ($region_x_lo"0|*>1") THEN DEFINE SYMBOL ferret_curvi_quals \   
          ($ferret_curvi_quals)/HLIM=($region_x_lo):($region_x_hi)
        IF ($region_y_lo"0|*>1") THEN DEFINE SYMBOL ferret_curvi_quals \   
          ($ferret_curvi_quals)/VLIM=($region_y_lo):($region_y_hi)

      DEFINE SYMBOL ferret_plot_title ($ferret_plot_title) <NL>Native XY Curvilinear Plot

ELSE  ! Native_Z_section requested, so set up to do a section plot in xz or yz or zt

   LET xx = X[GX=($data_var),d=($data_num)]
   LET yy = Y[GY=($data_var),d=($data_num)]
   LET tt = T[GT=($data_var),d=($data_num)]

   IF ($ferret_view"|xz>1|*>0") THEN
      LET/UNITS=degrees/TITLE=longitude xval = \
         xx[($region_xy)] + \
         0*MISSING( ($ferret_thk_var)[d=($thk_num),($region_xy)], 0 )
      LET zdep = MISSING( ($ferret_thk_var)[d=($thk_num),($region_xy)], 0)
      LET/UNITS=meters/TITLE=depth zval = 0*xx[($region_xy)] + zdep[k=@iin]

! Define the plot variable as 3-argument plot command, with /VLIM to set the vertical region.
      DEFINE SYMBOL ferret_plot_var = \
        /VLIM=($region_z_lo):($region_z_hi) ($data_var)[d=($data_num),($region_xyt)], xval, zval
      DEFINE SYMBOL ferret_plot_title "($data_title) ($data_units) native depth thicknesses"

! Define upper-left labels with the latitude region

      DEFINE SYMBOL n_left_labels = `($n_left_labels"0")+1`
      DEFINE SYMBOL upper_left_($n_left_labels"0") = "Latitude: ($region_y_lo)N"
      IF `($region_y_lo) LT 0` THEN 
         DEFINE SYMBOL south_region_y_lo = `-1* ($region_y_lo)`
         DEFINE SYMBOL upper_left_($n_left_labels"0") = "Latitude: ($south_region_y_lo)S"
      ENDIF
      DEFINE SYMBOL latitude_lab = ($upper_left_($n_left_labels"0"))

   ENDIF

   IF ($ferret_view"|yz>1|*>0") THEN
      LET/UNITS=degrees/TITLE=latitude yval = \
         yy[($region_xy)] + \
         0*MISSING( ($ferret_thk_var)[d=($thk_num),($region_xy)], 0 )
         LET zdep = MISSING( ($ferret_thk_var)[d=($thk_num),($region_xy)], 0)
         LET/UNITS=meters/TITLE=depth zval =  0*yy[($region_xy)] + zdep[k=@iin]

! Define the plot variable as 3-argument plot command, with /VLIM to set the vertical region.
      DEFINE SYMBOL ferret_plot_var = \
        /VLIM=($region_z_lo):($region_z_hi) ($data_var)[d=($data_num),($region_xyt)], yval, zval
      DEFINE SYMBOL ferret_plot_title "($data_title) ($data_units) native depth thicknesses"

! Define upper-left labels with the longitude region

      DEFINE SYMBOL n_left_labels = `($n_left_labels"0")+1`
      DEFINE SYMBOL upper_left_($n_left_labels"0") = "Longitude: ($region_x_lo)E"
      IF `($region_x_lo) LT 0` THEN 
         DEFINE SYMBOL west_region_x_lo = `-1* ($region_x_lo)`
         DEFINE SYMBOL upper_left_($n_left_labels"0") = "Longitude: ($west_region_x_lo)W"
      ENDIF
      DEFINE SYMBOL longitude_lab = ($upper_left_($n_left_labels"0"))
   ENDIF

! This makes wierd fill plots in examples seen so far.
   IF ($ferret_view"|zt>1|*>0") THEN
      LET/UNITS=`($ferret_thk_var)[d=($thk_num)],RETURN=units`/TITLE=time tval = \
         tt[($region_t)] + \
         0*MISSING( ($ferret_thk_var)[d=($thk_num),($region_xyt)], 0 )
      LET zdep = MISSING( ($ferret_thk_var)[d=($thk_num),($region_xy)], 0)
      LET/UNITS=meters/TITLE=depth zval = 0*tt[($region_t)] + zdep[k=@iin]

      DEFINE SYMBOL ferret_plot_var = \
        ($data_var)[d=($data_num),($region_xyt)], tval, zval
      DEFINE SYMBOL ferret_plot_title "($data_title) ($data_units) native depth thicknesses"

      DEFINE SYMBOL n_left_labels = `($n_left_labels"0")+1`
      DEFINE SYMBOL upper_left_($n_left_labels"0") = "Longitude: ($region_x_lo)E"
      IF `($region_x_lo) LT 0` THEN 
         DEFINE SYMBOL west_region_x_lo = `-1* ($region_x_lo)`
         DEFINE SYMBOL upper_left_($n_left_labels"0") = "Longitude: ($west_region_x_lo)W"
      ENDIF
      DEFINE SYMBOL longitude_lab = ($upper_left_($n_left_labels"0"))

      DEFINE SYMBOL n_left_labels = `($n_left_labels"0")+1`
      DEFINE SYMBOL upper_left_($n_left_labels"0") = "Latitude: ($region_y_lo)N"
      IF `($region_y_lo) LT 0` THEN 
         DEFINE SYMBOL south_region_y_lo = `-1* ($region_y_lo)`
         DEFINE SYMBOL upper_left_($n_left_labels"0") = "Latitude: ($south_region_y_lo)S"
      ENDIF
      DEFINE SYMBOL latitude_lab = ($upper_left_($n_left_labels"0"))

   ENDIF

ENDIF

! End of $RCSfile ------------transform_hybrid_z_curvi_xy.jnl-------------------------------

