!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Timeseries_station_plot.jnl
! 
! Author: Ansley Manke
! Date: Nov 2014
! 10/2016   ACM Catch and issue an error for string variables
! 12/2016 fixes for case when first variable is all-missing
!  8/2017 *acm* Account for change to expndi_by_m_function
! 11/2017 *acm* Handle timeseries data returned with just one point
! 11/2017 *acm* Dont label plots with units of "units" or "none"
! 11/2018 *acm* Fix loop control bug when a timeseries is all missing

! Plot sets of time series from a Discrete Sampling Geometries timeseries dataset
!

SET MODE verify:always  ! allows for debugging

! Set the gif filename, changing it from .gif to the name from this request
! Set up to write info to the debug log so that FshowGO can be used
GO LAS_initial_setup
! Add another color, light gray, to make a line through the middle of each plot
! for multiple timeseries, and for graticules.
LET ncolors = 7
SET MODE LINEC:`ncolors`

PPL COLOR,7,85,85,85    ! lt gray

! Do up to 8 separate stations as their own line plot on the page

LET max_separate_stations = 8
LET max_labeled_stations = 6

! If they are plotting just one variable, plot the stations together
! 

IF `($data_count) EQ 1` THEN LET max_separate_stations = 1


! Initialize the region and data.

DEFINE SYMBOL data_initialization_script = feature_initialize_data_insitu

DEFINE SYMBOL fview = T

! DEFINE SYMBOLs associated with the region and data and perform any
! initialization needed for this dataset.

GO LAS_initialize_region 0
IF ($data_0_var"0|vid>1|*>0")  THEN
   DEFINE SYMBOL ferret_by_id = 1
   USE "($data_0_url)"
   LET varnames = ..varnames

   DEFINE SYMBOL data_0_var = `varnames[i=1]`
   CANCEL DATA "($data_0_url)"
ENDIF
DEFINE SYMBOL data_name_in = ($data_0_var)

GO LAS_initialize_data 0

! for this we do not need var_with_gaps
DEFINE SYMBOL data_var = ($data_0_var)  

IF `($data_count) GT 1` THEN DEFINE SYMBOL data_var_1 = ($data_1_var) 
IF `($data_count) GT 2` THEN DEFINE SYMBOL data_var_2 = ($data_2_var) 
IF `($data_count) GT 3` THEN DEFINE SYMBOL data_var_3 = ($data_3_var) 
IF `($data_count) GT 4` THEN DEFINE SYMBOL data_var_4 = ($data_4_var) 
IF `($data_count) GT 5` THEN DEFINE SYMBOL data_var_5 = ($data_5_var) 

DEFINE SYMBOL its_insitu = 1
DEFINE SYMBOL its_tsplot = 1
DEFINE SYMBOL line_drawn = 1

! Check for errors (They often occur during dataset initialization.)

IF ($error_status"0|*>1") THEN
  MESSAGE/ERROR **ERROR ($error_string)
  EXIT/PROGRAM
ENDIF

! check that the variables are numeric

REPEAT/RANGE=0:`($data_count)-1`/name=q (\
  DEFINE SYMBOL q =`q`;\
  LET gettype = ($data_($q)_var)[($vshape"x")=1];\
  DEFINE SYMBOL vtype = `gettype,RETURN=dtype`;\
  IF `($vtype"0|CHAR>1|*>0")` THEN ;\
    MESSAGE/ERROR **ERROR Invalid data type for variable";\
    EXIT/PROGRAM;\
ENDIF;\
)


! Here is variable 0 title
DEFINE SYMBOL ferret_title_0 = ($ferret_plot_title"($data_var)")
LET title_len = STRLEN("($ferret_title_0)")

! Set the URL label for the first dataset.
GO LAS_url_label 0

! For the annotations
IF `($ngood_data"-10|*>1") LT 0` THEN DEFINE SYMBOL ngood_data = `($data_var)[i=@NGD]`
IF `($nbad_data"-10|*>1") LT 0` THEN DEFINE SYMBOL nbad_data = `($data_var)[i=@NBD]`
LET nstations = `($rowvar),return=msize`

LET maxrow = `($rowvar)[m=@max]`

LET nobs = `time,return=isize`

DEFINE SYMBOL nstations = `nstations`

! Refuse to plot zillions of lines

IF `nstations GT 30` THEN
   MESSAGE/ERROR **ERROR Too many lines for Time plot. Choose 30 or fewer features to plot.
   EXIT/PROGRAM
ENDIF


! when coloring multiple line plots, define a palette and color levels

IF `nstations GT max_separate_stations` THEN
   IF `($ferret_palette"0|*>1") EQ 0` THEN DEFINE SYMBOL ferret_palette = thirty_by_levels
   IF `nstations LE max_labeled_stations` THEN \
     DEFINE SYMBOL ferret_palette = nine_by_levels
   DEFINE SYMBOL ferret_fill_levels = (0,`nstations+1`,1)
   IF `nstations GT max_labeled_stations AND ($data_count) eq 1` THEN DEFINE SYMBOL ferret_palette = range_of_blues ! something less bold...
ENDIF

DEFINE SYMBOL margin_del = 0.08  ! If multiple axes for different units
IF `($data_count) LE 2` THEN DEFINE SYMBOL margin_del = 0

LET vxlo = 0.1 
LET vxhi = 0.9

let vylo = 0.16   ! 0.2 >> 0.16
let vyhi = 0.98

IF `($data_count) GT 1 OR ($nstations) GT 1` THEN DEFINE SYMBOL itsa_multi_lineplot = 1

GO LAS_set_plot_qualifiers

! Open the window, apply size, scale options
IF `nstations EQ 1 OR nstations GT max_separate_stations` THEN 
   DEFINE SYMBOL win_aspect = 0.4
ELSE
   DEFINE SYMBOL win_aspect = `0.4 + nstations/max_separate_stations`
ENDIF

GO LAS_open_window

DEFINE VIEW/AXES/X=0.08:0.99/YLIM=0.07:0.96 full_view
DEFINE VIEW/AXES/X=0.08:0.99/YLIM=0.07:0.96 full_viewr
SET VIEW full_view

PPL TICS,.1,.125,,,0,1


! Use Ferret properties to set up the plot qualifiers
! Set up variables - multiple stations regrid to a common time axis

LET t1 = time[i=@min]
LET t2 = time[i=@max]
LET ntimes = min(2000,nstations *maxrow)


! Dataset with just one point.  Make a nominal plot and exit

IF `ntimes EQ 1 OR t1 EQ t2` THEN
   LET t1 = time[i=@min] - 18000
   LET t2 = time[i=@max] + 18000
   LET ntimes = 5
   DEFINE AXIS/T=`t1,prec=15`:`t2,prec=15`/npoints=`ntimes`/UNITS=seconds/T0="`time.time_origin`" taxis_all
   LET var = {,,`($data_var)`,,}
   
   LET tt5 = t[gt=taxis_all]
   LET plot_var = reshape(var,tt5)
   PLOT/symbol=19/siz=0.12/color=blue/thick/nolab reshape(var,tt5)
   DEFINE SYMBOL data_0_var = plot_var
   DEFINE SYMBOL result_type = tline
   DEFINE SYMBOL note_num = `($note_num"0") + 1`
   DEFINE SYMBOL note_($note_num)_lab = Request includes just one time point
   GO LAS_results ($result_type)
   exit/program
ENDIF


DEFINE AXIS/T=`t1,prec=15`:`t2,prec=15`/npoints=`ntimes`/UNITS=seconds/T0="`time.time_origin`" taxis_all



IF `nstations EQ 1` THEN 
   LET sloc = STRINDEX("`time.units`", " ")
   LET tunits = SUBSTRING("`time.units`", 1, sloc-1)
   DEFINE AXIS/T/UNITS=`tunits`/t0="`time.time_origin`" taxis = time
ENDIF
LET tt = t[gt=taxis]
LET tt_all = t[gt=taxis_all]

DEFINE AXIS/x=1:`maxrow`:1 xrow
LET xvar = x[gx=xrow]

LET time2d = EXPNDI_BY_M_COUNTS (time[i=1:`nobs`], ($rowvar)[M=1:`nstations`], xvar)
LET var2d_0 = EXPNDI_BY_M_COUNTS (($data_var)[i=1:`nobs`], ($rowvar)[M=1:`nstations`], xvar)

LET id2dz = EXPNDI_ID_BY_Z_COUNTS( XSEQUENCE(($rowvar)[M=1:`nstations`]), maxrow)
LET id2d = RESHAPE(TRANSPOSE_XZ(id2dz), var2d_0)
DEFINE SYMBOL axset = /axes=0,1,1,0

DEFINE SYMBOL vtype = `($data_var),RETURN=dtype`
   IF ($vtype"0|CHAR>1|*>0") THEN 
   DEFINE SYMBOL error_string = Invalid data type for variable ($ferret_title_0). Choose another variable.
   MESSAGE/ERROR **ERROR ($error_string)
   EXIT/PROGRAM
ENDIF

IF `($data_var)[i=@ngd] GE 1` THEN
   LET dmm = MINMAX (($data_var)) 

   ppl %range `dmm[i=1],prec=15`,`dmm[i=2],prec=15`, 5

   IF ($ppl$range_low"|($ppl$range_high)>1|*>0") THEN
     LET dm1 = 0.95*($ppl$range_low)
      LET dm2 = 1.05*($ppl$range_low)
      ppl %range `dm1,prec=15`,`dm2,prec=15`, 5
   ENDIF
   LET ymn = ($ppl$range_low)
   LET ymx = ($ppl$range_high)
   LET ydl = ($ppl$range_inc)

   IF `STRINDEX(UPCASE("($data_units%0%)"), "COUNT") GT 0` THEN
       LET dmm = minmax(($data_var))
       LET ymn = `dmm[i=1]-1`
       LET ymx = `dmm[i=2]+1`
       LET ydl = 0.5
       IF `ymx-ymn GT 10` THEN LET ydl = 1
       IF `ymx-ymn GT 20` THEN LET ydl = ($ppl$range_inc)
   ENDIF

   IF `ymn EQ ymx` THEN
      LET ymn = `ymn-1`
      LET ymx = `ymx+1`
   ENDIF

! Underlay plot with the time axis and the right vertical range
! check for the postitive=down attribute on the variable we're plotting 

   IF `nstations LE max_labeled_stations AND ($data_count) EQ 1` THEN \   
      DEFINE VIEW/AXES/X=0.08:0.99/YLIM=`vylo+0.02`:0.96 full_view
   IF `($data_count) EQ 1 AND nstations GT 1` THEN
      SET VIEW full_view
      IF ($plot_pos_down"0|0|1|*>1") THEN
         DEFINE SYMBOL vert  = /VLIM=`ymx`:`ymn`:`ydl` 
      ELSE
         DEFINE SYMBOL vert  = /VLIM=`ymn`:`ymx`:`ydl` 
      ENDIF
      PLOT/NOLAB($qualifiers)($vert) `ymn-100` + 0*t[gt=taxis_all]

   ENDIF

ELSE  ! no valid data_var data
   LET ymn = -1
   LET ymx = 1
   LET ydl = 0.5
ENDIF

IF `($data_var)[i=@ngd] EQ 0 AND ($data_count) eq 1` THEN

   PLOT/NOLAB($qualifiers)/VLIM=-1:1 `-100` + 0*t[gt=taxis_all]
   LET nstations = 1
!   LABEL/NOUSER `0.5*($ppl$xlen)`,`0.5*($ppl$ylen)`,0,0,0.15 No Valid Data
   DEFINE SYMBOL allbad = 1
   CANCEL SYMBOL axset
!   DEFINE SYMBOL ferret_use_graticules = none
ENDIF

! For 1-variable, 1-station plots, turn on horizontal graticule lines, unless graticules 
! have been turned off explicitly. Ignore choice of white - its in the menu 
! but useless for line plots.

IF `($data_count) EQ 1` THEN
   IF `(nstations GE max_labeled_stations) AND ($ferret_use_graticules"1|none>0|notic>0|white>0|*>1)` THEN
     IF ($ferret_use_graticules"0|black>1") THEN
        DEFINE SYMBOL qualifiers = ($qualifiers)/HGRAT=(DASH,COLOR=black)
     ELSE
        DEFINE SYMBOL qualifiers = ($qualifiers)/HGRAT=(DASH,COLOR=7)
     ENDIF
   ENDIF
ENDIF

! Otherwise turn them on only if requested 

IF `(nstations GT 1) AND ($ferret_use_graticules"0|none>0|notic>0|white>0|*>1)` THEN
  IF ($ferret_use_graticules"0|black>1") THEN
     DEFINE SYMBOL qualifiers = ($qualifiers)/HGRAT=(DASH,COLOR=black)
  ELSE
     DEFINE SYMBOL qualifiers = ($qualifiers)/HGRAT=(DASH,COLOR=7)
  ENDIF
ENDIF
! Change any line characteristics.  The above LAS_set_plot_qualifiers, doesnt get the right ones 
! because it depends on the view shape to determine plot type.  This has a multi=D shape for a 1-D line plot.

IF ($ferret_line_or_sym"0|*>1") THEN DEFINE SYMBOL  plotsymbol = 25
GO set_linesym

!IF ($ferret_line_color"0|*>1") THEN DEFINE SYMBOL qualifiers = ($qualifiers)/color=($ferret_line_color)
!IF ($ferret_line_thickness"0|*>1")  THEN DEFINE SYMBOL qualifiers = ($qualifiers)/thick=($ferret_line_thickness)

! Analyze the variables and units to group variables by unit.
! setting up definitions for station 1.  If more stations, this will be repeated below.

LET row1 = 1
LET rowm = `($rowvar)[m=1]`
IF `nstations EQ 1` THEN
   DEFINE AXIS/T/UNITS=seconds/T0="`time.time_origin`" taxis_sta = time
ELSE
   DEFINE AXIS/T/UNITS=seconds/T0="`time.time_origin`" taxis_sta = time[i=`row1`:`rowm`]
ENDIF


LET tt = t[gt=taxis_sta]
LET plot_var_tA = RESHAPE(($ferret_plot_var), tt)

LET plot_var_t = plot_var_tA[gt=taxis_all@bin]
DEFINE SYMBOL ferret_plot_var_0 = plot_var_t
DEFINE SYMBOL units_0 = ($data_0_units"units")
DEFINE SYMBOL plot_arg = ($ferret_plot_var_0)
DEFINE SYMBOL all_units_same = 1


REPEAT/RANGE=1:`($data_count)-1`/name=q (\
 DEFINE SYMBOL q =`q`;\
 LET data_($q)_var_tA = RESHAPE(($data_($q)_var)[i=`row1`:`rowm`], tt);\
 LET data_($q)_var_t = data_($q)_var_tA[gt=taxis_all@bin];\
 DEFINE SYMBOL ferret_plot_var_($q) = data_($q)_var_t;\
 DEFINE SYMBOL plot_arg = ($plot_arg),($ferret_plot_var_($q));\
 DEFINE SYMBOL ferret_title_($q) = ($data_($q)_title) (($data_($q)_units));\
 DEFINE SYMBOL units_($q) = `UPCASE("($data_($q)_units%units%)")`;\
 DEFINE SYMBOL all_units_same = `($all_units_same) AND (STRCMP("($units_0)", "($units_($q))") EQ 0)`;\
)

DEFINE SYMBOL have_multiline_defs = 1
GO collect_units_vars

LET vxhi_g = `vxhi - ($margin_del)* (($nunit_grp)-2)`

IF `nstations EQ 1` THEN  ! one station multi var

   DEFINE SYMBOL data_var = plot_var_t
   DEFINE SYMBOL ferret_view = t

   DEFINE SYMBOL itsa_multi_lineplot = 1
   CANCEL SYMBOL ferret_trend_line

! symbols and/or line
   GO set_linesym

   DEFINE SYMBOL do_legend = `($data_count"0") GT 1`
   IF `($allbad"0") EQ 0` THEN GO LAS_draw_multi_line_plot `vxlo` `vxhi` `vylo` `vyhi`

   DEFINE SYMBOL ferret_plot_var = plot_var_t 
   LET vart = plot_var_t

! end one station multi var

ELSE  ! more than 1 station

! Plot the lines. For up to max_separate_stations, make separate labeled 
! line plots. Otherwise make a cloud of colored lines, changing color
! with each line. Should have a UI choice between the two styles.

   IF `nstations LE max_separate_stations AND ($data_count) GT 1` THEN

! ? Do we want to adjust the aspect ratio to make the plots more uniformly
!   shaped as there are more and more on the page?

      LET aspects = {0.3,0.45,0.575,0.7,0.825, 0.95, 0.075, 1.2}

      LET aspects = {0.3,0.45,0.575,0.7,0.825, 0.95, 1.075, 1.2}
      LET use_aspect = aspects[i=`nstations`]
      set win/asp=`use_aspect` 

! Make the time series axis along the bottom

! This viewport will be used to draw the time axis at the bottom 
! and to label the z axes.
      
      DEFINE VIEW/AXES/XLIM=`vxlo`:`vxhi`/YLIM=0.002:`vyhi` tv
      IF `($data_count) GT 1` THEN  DEFINE VIEW/AXES/TEXT=0.85/XLIM=`vxlo`:`vxhi_g`/YLIM=`vylo`:`vyhi` tv
      SET VIEW tv 

! Define variables for consistent vertical axes for all the time series

      REPEAT/RANGE=1:`nunique`/name=g (\
         DEFINE SYMBOL group = `g-1`;\
         GO  set_vertical_range ($group) )

! Draw the time axis along the bottom of the page.
! If there is just one timeseries, we'll plot the time
! axis along with the data so the plot axes line up.  

      IF `($data_count) GT 1` THEN GO margins 0.1,1.4  \
	ELSE GO margins 0.1,0.6
      PLOT/NOLAB/SYM=DOT/AXES=0,1,0,0/VLIM=`plotmin_0`:`plotmax_0` t[gt=taxis_all]
      DEFINE SYMBOL axset = /axes=0,0,1,0

! Define viewports for the time series plots
! If multiple data variables, leave room for the line-key at the bottom.
      LET y2 = `vyhi`
      LET del = 0.92/nstations
      IF `($data_count) GT 1` THEN LET del = 0.8/nstations
      LET y1 = `y2 - del` + 0.02
      IF `nstations LE 3` THEN LET y1 = `y1 + 0.02`

      REPEAT/RANGE=1:`nstations`/NAME=s (\
                                DEFINE SYMBOL s = `s`;\
                                DEFINE VIEW/AXES/TEXT=0.85/xlim=`vxlo`:`vxhi`/ylim=`y1`:`y2` vp_`s`;\
                                DEFINE VIEW/AXES/TEXT=0.85/xlim=`vxlo`:`vxhi_g`/ylim=`y1`:`y2` vp_`s`_g;\
   			     DEFINE SYMBOL y1_($s) = `y1`;\
   			     DEFINE SYMBOL y2_($s) = `y2`;\
   			     LET y1 = `y1 - del`; LET y2 = `y2 - del`)

! Set up to draw a gray horizontal line through the middle of each plot
      LET t_all = t[gt=taxis_all]
      LET tpts = {`t_all[L=@min]`, `t_all[L=@max]`}
      LET ymid = ( `plotmax_0` + `plotmin_0`)/2
      LET ypts = {`ymid`, `ymid`}
      DEFINE SYMBOL draw_gray = `nstations GT 1 AND ($data_count) EQ 1`
      
! Draw and label each timeseries. Define the time series from the
! time data in each individual feature, regrid to the overall time series
! so they will be positioned correctly.

! check for the postitive=down attribute on the variable we're plotting 

      IF ($plot_pos_down"0|0|1|*>1") THEN
         DEFINE SYMBOL vert  = /VLIM=`plotmax_0`:`plotmin_0`:`plotinc`
      ELSE
         DEFINE SYMBOL vert  = /VLIM=`plotmin_0`:`plotmax_0`:`plotinc`
      ENDIF
      
      IF `plotinc EQ 0` THEN CANCEL SYMBOL vert

      DEFINE SYMBOL axset = /axes=0,0,1,1

      IF ($allbad"0|*>1") THEN 
!         LABEL/NOUSER `0.5*($ppl$xlen)`,`0.5*($ppl$ylen)`,0,0,0.15 No Valid Data
      ELSE
      
         IF `($data_count) GT 1` THEN 
            GO set_linesym
            DEFINE SYMBOL do_legend = 0
            DEFINE SYMBOL nohoriz = 1
         ENDIF

! Definitions for the different variables. The time axis taxis_sta
! and variable tt on that axis are redefined at each iteration 
! of the stations loop below, other definitions made earlier

	 LET row1 = 1
	 LET rowm = `($rowvar)[m=1]`

  
	 REPEAT/RANGE=1:`nstations`/name=s (\
         DEFINE SYMBOL s = `s`;\
         SET VIEW vp_($s)_g;\
         SET VIEW vp_($s);\
         LET rowm = `row1+($rowvar)[m=($s)]-1`;\
	 DEFINE AXIS/T/UNITS=seconds/T0="`time.time_origin`" taxis_sta = time[i=`row1`:`rowm`];\
	 LET tt = t[gt=taxis_sta];\
	 LET plot_var_tA = RESHAPE(($ferret_plot_var)[i=`row1`:`rowm`], tt);\
	 REPEAT/RANGE=1:`($data_count)-1`/name=q (\
	     DEFINE SYMBOL q =`q`;\
	     LET data_($q)_var_tA = RESHAPE(($data_($q)_var)[i=`row1`:`rowm`], tt);\
	   );\
         IF `($s) EQ nstations` THEN DEFINE SYMBOL do_legend = 1;\ 
         DEFINE SYMBOL station_label = `($feature_variable)[m=($s)]`;\
         DEFINE SYMBOL vpname = ($s)_;\
         GO  LAS_draw_multi_line_plot `vxlo` `vxhi` ($y1_($s)) ($y2_($s));\
	 let row1 = `rowm+1`)

         LET vart = plot_var_t
      ENDIF  ! allbad

   ELSE  ! more than max_separate_stations stations, data_count is 1

! plot lines colored by index number, skipping any that are empty
      

! tt and vart are redefined in the loop if there is valid data in the
! individual series

      LET tt = t[gt=taxis_all]
      LET vart = 1./0 + 0* tt

      IF ($allbad"0|*>1") THEN 
!         LABEL/NOUSER `0.5*($ppl$xlen)`,`0.5*($ppl$ylen)`,0,0,0.15 No Valid Data
      ELSE

! Define correct time axis for each trajectory.  If there are large gaps in the
! time axis itself detect that and pick up the pen.

         cancel symbol ferret_plot_var

         LET colrx = id2d[m=1]  
         DEFINE SYMBOL cshp = `colrx,RETURN=shape`
      
	 LET row1 = 1
	 LET rowm = `($rowvar)[m=1]`

         REPEAT/RANGE=1:`nstations`/name=s (\
         DEFINE SYMBOL s = `s`;\
         LET rowm = `row1+($rowvar)[m=($s)]-1`;\
         DEFINE AXIS/T/UNITS=seconds/T0="`time.time_origin`" taxis = time[i=`row1`:`rowm`];\
         let row1 = `rowm+1`;\
         LET tempx = var2d_0[m=($s)];\
         LET colrx = id2d[m=($s)];\
         DEFINE SYMBOL ferret_title_`($s)-1` `($feature_variable)[m=($s)]`;\
         IF `tempx[($cshp)=@ngd] eq 0` then exit/cycle;\
         LET tt = t[gt=taxis];\
         LET have_dat = 1;\
         LET var_t = reshape(tempx, tt);\
         LET colort = reshape(colrx, tt) - 0.1;\
	 let delt = tbox[gt=taxis];\
	 let maskvar = delt[L=@ave]*1.1;\
	 let gap_mask = if delt LE `maskvar` then 1;\
         IF `($rowvar)[m=($s)] GT 1` THEN PLOT/OVER/NOLAB/THICK=1/RIBBON($qualifiers) gap_mask*var_t,colort;\
	 )
		 
	 IF ($units_0"0|units>0|none>0|NONE>0|*>1") THEN LABEL/NOUSER `-0.6`, `($ppl$ylen)/2`, 0, 90, 0.12, @AC($units_0)

	 IF `nstations LE max_labeled_stations` THEN\
	  GO LAS_lineplot_legend `nstations` ($ferret_palette) 

!  Setting up for the map-scale file to get the right info for time zooming
	 SET VAR/NAME=var_t0 var_t

	 LET tt0 = tt[L=1]
	 LET ttn = tt[L=@max]
	 LET var_t = IF tt EQ tt0 OR tt EQ ttn THEN var_t0 
	 SET VIEW full_viewr
	 PLOT/NOAX/NOLAB/SYM=dot/RIBBON/PALETTE=white var_t, var_t
	 let vart = var_t0

      ENDIF  ! allbad
   ENDIF ! nstations LE max_separate_stations

ENDIF ! IF `nstations EQ 1`  ELSE ...

! for the results script
DEFINE SYMBOL ferret_plot_var = vart

! Add labels at the top for the location of overlaid lines
! and for URLs if they exist  

GO labels_above_plot

! Add timeseries information on the top
GO feature_labels  

! if constraints are shown via constraint_0_lhs etc, define labels for those
GO set_constraint_labels

! Save the results
! The script wants to get the time-axis end points.

DEFINE SYMBOL data_0_var = tt_all

DEFINE SYMBOL result_type = tline
GO LAS_results ($result_type)

! End of file ------------ Timeseries_station_plot.jnl--------------------------

