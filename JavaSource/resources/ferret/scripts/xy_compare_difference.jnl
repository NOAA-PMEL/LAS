!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! $RCSfile: xy_compare_difference.jnl,v $
! 
! $Author: ansley $
! $Date: 2006/08/04 03:31:37 $
! 3/7/2007: ACM. Put code to check that the region was not too small, resulting 
!           in degenerate plot into LAS_initialize_data.jnl rather than in the 
!           individual plot scripts.
! 3/29/2007 ACM Fix logic interpreting contents of ferret_interpolate_data 
! 3/2008 ACM Use SHADE/TRIM for shade underlays of FILL plots (Ferret v6.1)
! 8/2012 ACM Fixing ticket 1337, F-TDS bug. If there no _FillValue, set it 
!            to a known value that matches the value used in get_datavar.jnl
! 10/10/2012 Reverse the sense of the difference; ticket 1377
! ACM 11/18 (Ferret v7.44) use new OVER/AXES behavior to draw axis and 
!                          graticule lines on top of everything else

! xy_compare_difference.jnl creates an XY plot for use with the 
! Back End Server code that sits behind a Live Access Server (LAS). 
! It produces a difference plot of 2 variables which are on the same
! xy grid
!
! Set any Ferret modes
!
! NOTE:  Should we support any of the following Ferrt modes?
! NOTE:    ASCII_FONT, CALENDAR, DEPTH_LABEL, LABELS, LATIT_LABEL, LONG_LABEL 

IF ($ferret_interpolate_data%0|false>0|true>1|1|0|*>1%) THEN SET MODE INTERPOLATE

DEFINE SYMBOL fview = `UPCASE("($ferret_view)")`

! If levels werent sent in, set to use centered levels.

IF `($ferret_diff_contour_levels"0|*>1") EQ 0` THEN DEFINE SYMBOL ferret_contour_levels = c
IF `($ferret_diff_fill_levels"0|*>1") EQ 0` THEN DEFINE SYMBOL ferret_fill_levels = c

! Define symbols associated with the regign and data and perform any
! initialization needed for this dataset.
!
! NOTE:  Adding support for a 'base layer' variable would mean passing
! NOTE:  some other argument.  For now, though, we always use 'data_0'
! NOTE:  for the base layer and region.

GO LAS_initialize_region 0

GO LAS_initialize_data 0

! Check for errors (They often occur during dataset initialization.)

IF ($error_status"0|*>1") THEN
  MESSAGE/ERROR **ERROR ($error_string)
  EXIT/PROGRAM
ENDIF

! Check for errors 
IF ($error_status"0|ERROR>1") THEN
  MESSAGE/ERROR **ERROR ($error_string)
  EXIT/PROGRAM
ENDIF

! Here is variable 0 and its title

DEFINE SYMBOL ferret_var_0 = ($ferret_plot_var)
LET ferret_var_0_noregion = ($ferret_plot_var_noregion)
DEFINE SYMBOL ferret_title_0 = ($ferret_plot_title"($data_var)")

LET attlist = ($data_0_var).attnames
IF `IS_ELEMENT_OF_STR(attlist,{"missing_value","_FillValue"} ) EQ 0` THEN
   SET VAR/BAD=-9999999 ($data_0_var)
ENDIF

! Initialize next dataset. 
! (The interface guarantees that the match in X and Y)

! Apply any expression only to the first variable not to this one.
CANCEL SYMBOL ferret_expression 

GO LAS_initialize_region 1

GO LAS_initialize_data  1 

! Check whether the region is too small to make a 2D plot on this grid.
GO LAS_check_2d_region

! Check for errors 

IF ($error_status"0|*>1") THEN
   MESSAGE/ERROR **ERROR ($error_string)
   EXIT/PROGRAM
ENDIF

! Here is variable 1 and its title

DEFINE SYMBOL ferret_var_1 = ($ferret_plot_var)
LET ferret_var_1_noregion = ($ferret_plot_var_noregion)
DEFINE SYMBOL ferret_title_1 = ($ferret_plot_title"($data_var)")

LET attlist = ($data_1_var).attnames
IF `IS_ELEMENT_OF_STR(attlist,{"missing_value","_FillValue"} ) EQ 0` THEN
   SET VAR/BAD=-9999999 ($data_1_var)
ENDIF

! If we are using index strides then apply the correct ones to 
! the first variable.
IF ($set_ndx_strides_0"0|*>1") THEN
   DEFINE SYMBOL ferret_var_0 = ($data_0_var)[d=($data_0_num),($set_ndx_strides_0)]
ENDIF

! Compare the X and Y axes of the two variables. They must be the same.

GO LAS_compare_axes "($data_0_var)[d=($data_0_num)]" "($data_1_var)[d=($data_1_num)]" ($fview)

! Check for errors 

IF ($error_status"0|*>1") THEN   
   DEFINE SYMBOL error_string = ($fview) grid of ($data_1_var) must match ($fview) grid of ($data_0_var)
   MESSAGE/ERROR **ERROR ($error_string)
   EXIT/PROGRAM
ENDIF

! Define the plot variable 

DEFINE SYMBOL ferret_diff_var = ($ferret_var_1) - ($ferret_var_0)

IF ($native_curvilinear_xy"0|*>1") THEN 
  DEFINE SYMBOL ferret_diff_var = ($ferret_plot_base_var_1) -  ($ferret_plot_base_var_0)  , xcoord, ycoord
  DEFINE SYMBOL ferret_diff_var_m360 = ($ferret_plot_base_var_1) -  ($ferret_plot_base_var_0) , xcoord-360, ycoord
ENDIF

! Use Ferret properties to set up the plot qualifiers

! Get levels based on ferret_diff_var
GO LAS_auto_levels

! Use Ferret properties to set up the plot qualifiers
GO LAS_set_plot_qualifiers

! Curvilinear plots may have more qualifiers. 
IF ($native_curvilinear_xy"0|*>1") THEN
  DEFINE SYMBOL qualifiers = ($qualifiers)($ferret_curvi_quals)

   IF ($ferret_curvi_quals"0|*>1") THEN \
   IF ($ferret_lon_modulo"1|1|0|yes>1|no>0|*>0") THEN  DEFINE SYMBOL shade_qualifiers = ($shade_qualifiers)/MODULO
ENDIF

! Open the window, apply size, scale options
GO LAS_open_window

! Set the title, and the labels for the upper left listing the locations
! and time in directions normal to the plot, and in the upper right listing
! urls if dataset are opendap.

GO LAS_set_diff_labels ($fview)
DEFINE SYMBOL ferret_plot_title ($ferret_diff_title)

! Make a plot,needed to get the number of levels (SHADE/SET doesnt do it.)
IF ($plot_type"0|CONTOUR>0|*>1") THEN
IF ($ferret_annotations"0|*>1") THEN
   SHADE($qualifiers)($shade_qualifiers)/TITLE="($ferret_plot_title)" ($ferret_diff_var)
   CANCEL VIEW
   SET VIEW full_view
ENDIF
ENDIF

! Draw the plot
IF ($shade_underlay) THEN 

      IF `($ferret_google_plot"0") EQ 0` THEN \
         DEFINE SYMBOL shade_qualifiers = ($shade_qualifiers)/TRIM

      SHADE($qualifiers)($shade_qualifiers)/TITLE="($ferret_plot_title)"/SET ($ferret_diff_var)
      GO reset_labels
      IF `($ferret_annotations"0|*>1") EQ 0` THEN 
         IF ($labnum_z"0|*>1") THEN go unlabel ($labnum_z)
         IF ($labnum_t"0|*>1") THEN go unlabel ($labnum_t)
      ENDIF
   PPL SHADE
   IF `($LEV_NUM"0") GT 245/2` THEN PPL SHASET RESET
   ($plot_type)($qualifiers)/OVER($do_axes)/NOKEY/NOLAB ($ferret_diff_var)
   IF ($native_curvilinear_xy"0|*>1") THEN ($plot_type)($qualifiers)/OVER($do_axes)/NOKEY/NOLAB ($ferret_diff_var_m360)
ELSE
   ($plot_type)($qualifiers)/TITLE="($ferret_plot_title)"/SET ($ferret_diff_var)
      GO reset_labels
      IF `($ferret_annotations"0|*>1") EQ 0` THEN 
         IF ($labnum_z"0|*>1") THEN go unlabel ($labnum_z)
         IF ($labnum_t"0|*>1") THEN go unlabel ($labnum_t)
      ENDIF
   PPL ($plot_type)
ENDIF

! One of the results is the data min and max. Save those here.
   DEFINE SYMBOL data_plotted_min = ($ppl$zmin)
   DEFINE SYMBOL data_plotted_max = ($ppl$zmax)

! Put the labels for time/location in the upper left

GO labels_above_plot

IF ($ferret_contour_style"0|default>0|color_filled_plus_lines>1|raster_plus_lines>1|*>0") THEN
  IF ($ferret_contour_levels"0|*>1") THEN DEFINE SYMBOL levsym =  /LEVELS=($ferret_contour_levels)
  CONTOUR/OVER/NOLAB($levsym) ($ferret_diff_var)
ENDIF

! Overlay additional cartography data (land mask, outlines, rivers, ...)

GO land_overlay

! Mark grid points. Options are no, subsample (tests if subsampling needed)
! or all to force marking all points.

IF ($ferret_mark_grid"0|no>0|all>1|subsample>1|*>0") THEN GO mark_grid

! Save the results
GO LAS_results box

! End of $RCSfile -----------------------------------------------------

