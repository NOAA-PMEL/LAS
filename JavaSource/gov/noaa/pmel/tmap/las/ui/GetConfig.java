/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package gov.noaa.pmel.tmap.las.ui;

import gov.noaa.pmel.tmap.las.jdom.JDOMUtils;
import gov.noaa.pmel.tmap.las.jdom.LASConfig;
import gov.noaa.pmel.tmap.las.product.server.LASConfigPlugIn;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.XMLTokener;

/** 
 * MyEclipse Struts
 * Creation date: 01-05-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class GetConfig extends ConfigService {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	private static Logger log = LoggerFactory.getLogger(GetConfig.class.getName());
	public String execute() {
		
		String query = request.getQueryString();
		if ( query != null ) {
			try{
				query = JDOMUtils.decode(query, "UTF-8");
				log.info("START: "+request.getRequestURL()+"?"+query);
			} catch (UnsupportedEncodingException e) {
				// Don't care we missed a log message.
			}			
		} else {
			log.info("START: "+request.getRequestURL());
		}
		String format = request.getParameter("format");
		
		String lock = (String) contextAttributes.get(LASConfigPlugIn.LAS_LOCK_KEY);
        if ( lock != null && lock.equals("true") ) {
        	sendError(response, "config", format, "Site updating. Reload and try again in a minute.");
        	return null;
        }
		
		LASConfig lasConfig = (LASConfig)contextAttributes.get(LASConfigPlugIn.LAS_CONFIG_KEY); 
		
		if ( format == null ) {
			format = "json";
		}

		try {

			
			writeResponse(response, lasConfig, format);
			
						
			// IOExceptiono, JSONException and JDOM Exception are expected.
		} catch (Exception e) {
			sendError(response, "config", format, e.toString());
		}
		
		if ( query != null ) {
			log.info("END:   "+request.getRequestURL()+"?"+query);						
		} else {
			log.info("END:   "+request.getRequestURL());
		}

		return null;
	}
	public void writeResponse(HttpServletResponse response, LASConfig lasConfig, String format) throws IOException, JSONException {
		PrintWriter respout = response.getWriter();
		if (format.equals("xml")) {
			response.setContentType("application/xml");
			respout.print(lasConfig.write());
		} else {
			response.setContentType("application/json");
			JSONObject json_response = new JSONObject(new XMLTokener(lasConfig.write()));
			log.debug(json_response.toString(3));
			json_response.write(respout);
		}
		
	}
}